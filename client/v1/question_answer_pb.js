// source: client/v1/question_answer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var survey_v1_survey_question_pb = require('../../survey/v1/survey_question_pb.js');
goog.object.extend(proto, survey_v1_survey_question_pb);
goog.exportSymbol('proto.client.v1.GetQuestionRequest', null, global);
goog.exportSymbol('proto.client.v1.GetQuestionResponse', null, global);
goog.exportSymbol('proto.client.v1.StartSurveyRequest', null, global);
goog.exportSymbol('proto.client.v1.StartSurveyResponse', null, global);
goog.exportSymbol('proto.client.v1.SubmitAnswerRequest', null, global);
goog.exportSymbol('proto.client.v1.SubmitAnswerRequest.Answer', null, global);
goog.exportSymbol('proto.client.v1.SubmitAnswerResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.v1.StartSurveyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.v1.StartSurveyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.v1.StartSurveyRequest.displayName = 'proto.client.v1.StartSurveyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.v1.StartSurveyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.v1.StartSurveyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.v1.StartSurveyResponse.displayName = 'proto.client.v1.StartSurveyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.v1.GetQuestionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.v1.GetQuestionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.v1.GetQuestionRequest.displayName = 'proto.client.v1.GetQuestionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.v1.GetQuestionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.client.v1.GetQuestionResponse.repeatedFields_, null);
};
goog.inherits(proto.client.v1.GetQuestionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.v1.GetQuestionResponse.displayName = 'proto.client.v1.GetQuestionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.v1.SubmitAnswerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.client.v1.SubmitAnswerRequest.repeatedFields_, null);
};
goog.inherits(proto.client.v1.SubmitAnswerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.v1.SubmitAnswerRequest.displayName = 'proto.client.v1.SubmitAnswerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.v1.SubmitAnswerRequest.Answer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.client.v1.SubmitAnswerRequest.Answer.repeatedFields_, null);
};
goog.inherits(proto.client.v1.SubmitAnswerRequest.Answer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.v1.SubmitAnswerRequest.Answer.displayName = 'proto.client.v1.SubmitAnswerRequest.Answer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.client.v1.SubmitAnswerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.client.v1.SubmitAnswerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.client.v1.SubmitAnswerResponse.displayName = 'proto.client.v1.SubmitAnswerResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.v1.StartSurveyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.client.v1.StartSurveyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.v1.StartSurveyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.v1.StartSurveyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dryrun: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    session: jspb.Message.getFieldWithDefault(msg, 2, ""),
    surveyId: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.v1.StartSurveyRequest}
 */
proto.client.v1.StartSurveyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.v1.StartSurveyRequest;
  return proto.client.v1.StartSurveyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.v1.StartSurveyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.v1.StartSurveyRequest}
 */
proto.client.v1.StartSurveyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDryrun(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSession(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSurveyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.v1.StartSurveyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.v1.StartSurveyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.v1.StartSurveyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.v1.StartSurveyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDryrun();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSession();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSurveyId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional bool dryrun = 1;
 * @return {boolean}
 */
proto.client.v1.StartSurveyRequest.prototype.getDryrun = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.v1.StartSurveyRequest} returns this
 */
proto.client.v1.StartSurveyRequest.prototype.setDryrun = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string session = 2;
 * @return {string}
 */
proto.client.v1.StartSurveyRequest.prototype.getSession = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.v1.StartSurveyRequest} returns this
 */
proto.client.v1.StartSurveyRequest.prototype.setSession = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 survey_id = 3;
 * @return {number}
 */
proto.client.v1.StartSurveyRequest.prototype.getSurveyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.v1.StartSurveyRequest} returns this
 */
proto.client.v1.StartSurveyRequest.prototype.setSurveyId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.v1.StartSurveyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.client.v1.StartSurveyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.v1.StartSurveyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.v1.StartSurveyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    startPageId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.v1.StartSurveyResponse}
 */
proto.client.v1.StartSurveyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.v1.StartSurveyResponse;
  return proto.client.v1.StartSurveyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.v1.StartSurveyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.v1.StartSurveyResponse}
 */
proto.client.v1.StartSurveyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStartPageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.v1.StartSurveyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.v1.StartSurveyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.v1.StartSurveyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.v1.StartSurveyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartPageId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 start_page_id = 1;
 * @return {number}
 */
proto.client.v1.StartSurveyResponse.prototype.getStartPageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.v1.StartSurveyResponse} returns this
 */
proto.client.v1.StartSurveyResponse.prototype.setStartPageId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.v1.GetQuestionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.client.v1.GetQuestionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.v1.GetQuestionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.v1.GetQuestionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentPageId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.v1.GetQuestionRequest}
 */
proto.client.v1.GetQuestionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.v1.GetQuestionRequest;
  return proto.client.v1.GetQuestionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.v1.GetQuestionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.v1.GetQuestionRequest}
 */
proto.client.v1.GetQuestionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurrentPageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.v1.GetQuestionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.v1.GetQuestionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.v1.GetQuestionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.v1.GetQuestionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentPageId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 current_page_id = 1;
 * @return {number}
 */
proto.client.v1.GetQuestionRequest.prototype.getCurrentPageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.v1.GetQuestionRequest} returns this
 */
proto.client.v1.GetQuestionRequest.prototype.setCurrentPageId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.client.v1.GetQuestionResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.v1.GetQuestionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.client.v1.GetQuestionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.v1.GetQuestionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.v1.GetQuestionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    questionsList: jspb.Message.toObjectList(msg.getQuestionsList(),
    survey_v1_survey_question_pb.SurveyQuestion.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.v1.GetQuestionResponse}
 */
proto.client.v1.GetQuestionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.v1.GetQuestionResponse;
  return proto.client.v1.GetQuestionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.v1.GetQuestionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.v1.GetQuestionResponse}
 */
proto.client.v1.GetQuestionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new survey_v1_survey_question_pb.SurveyQuestion;
      reader.readMessage(value,survey_v1_survey_question_pb.SurveyQuestion.deserializeBinaryFromReader);
      msg.addQuestions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.v1.GetQuestionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.v1.GetQuestionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.v1.GetQuestionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.v1.GetQuestionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      survey_v1_survey_question_pb.SurveyQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * repeated survey.v1.SurveyQuestion questions = 1;
 * @return {!Array<!proto.survey.v1.SurveyQuestion>}
 */
proto.client.v1.GetQuestionResponse.prototype.getQuestionsList = function() {
  return /** @type{!Array<!proto.survey.v1.SurveyQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, survey_v1_survey_question_pb.SurveyQuestion, 1));
};


/**
 * @param {!Array<!proto.survey.v1.SurveyQuestion>} value
 * @return {!proto.client.v1.GetQuestionResponse} returns this
*/
proto.client.v1.GetQuestionResponse.prototype.setQuestionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.survey.v1.SurveyQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.survey.v1.SurveyQuestion}
 */
proto.client.v1.GetQuestionResponse.prototype.addQuestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.survey.v1.SurveyQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.client.v1.GetQuestionResponse} returns this
 */
proto.client.v1.GetQuestionResponse.prototype.clearQuestionsList = function() {
  return this.setQuestionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.client.v1.SubmitAnswerRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.v1.SubmitAnswerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.client.v1.SubmitAnswerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.v1.SubmitAnswerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.v1.SubmitAnswerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dryrun: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    currentPageId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    session: jspb.Message.getFieldWithDefault(msg, 4, ""),
    answersList: jspb.Message.toObjectList(msg.getAnswersList(),
    proto.client.v1.SubmitAnswerRequest.Answer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.v1.SubmitAnswerRequest}
 */
proto.client.v1.SubmitAnswerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.v1.SubmitAnswerRequest;
  return proto.client.v1.SubmitAnswerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.v1.SubmitAnswerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.v1.SubmitAnswerRequest}
 */
proto.client.v1.SubmitAnswerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDryrun(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurrentPageId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSession(value);
      break;
    case 2:
      var value = new proto.client.v1.SubmitAnswerRequest.Answer;
      reader.readMessage(value,proto.client.v1.SubmitAnswerRequest.Answer.deserializeBinaryFromReader);
      msg.addAnswers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.v1.SubmitAnswerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.v1.SubmitAnswerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.v1.SubmitAnswerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.v1.SubmitAnswerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDryrun();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getCurrentPageId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getSession();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAnswersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.client.v1.SubmitAnswerRequest.Answer.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.client.v1.SubmitAnswerRequest.Answer.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.v1.SubmitAnswerRequest.Answer.prototype.toObject = function(opt_includeInstance) {
  return proto.client.v1.SubmitAnswerRequest.Answer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.v1.SubmitAnswerRequest.Answer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.v1.SubmitAnswerRequest.Answer.toObject = function(includeInstance, msg) {
  var f, obj = {
    questionId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    valuesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.v1.SubmitAnswerRequest.Answer}
 */
proto.client.v1.SubmitAnswerRequest.Answer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.v1.SubmitAnswerRequest.Answer;
  return proto.client.v1.SubmitAnswerRequest.Answer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.v1.SubmitAnswerRequest.Answer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.v1.SubmitAnswerRequest.Answer}
 */
proto.client.v1.SubmitAnswerRequest.Answer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuestionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.v1.SubmitAnswerRequest.Answer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.v1.SubmitAnswerRequest.Answer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.v1.SubmitAnswerRequest.Answer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.v1.SubmitAnswerRequest.Answer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestionId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional int32 question_id = 1;
 * @return {number}
 */
proto.client.v1.SubmitAnswerRequest.Answer.prototype.getQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.v1.SubmitAnswerRequest.Answer} returns this
 */
proto.client.v1.SubmitAnswerRequest.Answer.prototype.setQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated string values = 2;
 * @return {!Array<string>}
 */
proto.client.v1.SubmitAnswerRequest.Answer.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.client.v1.SubmitAnswerRequest.Answer} returns this
 */
proto.client.v1.SubmitAnswerRequest.Answer.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.client.v1.SubmitAnswerRequest.Answer} returns this
 */
proto.client.v1.SubmitAnswerRequest.Answer.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.client.v1.SubmitAnswerRequest.Answer} returns this
 */
proto.client.v1.SubmitAnswerRequest.Answer.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};


/**
 * optional bool dryrun = 1;
 * @return {boolean}
 */
proto.client.v1.SubmitAnswerRequest.prototype.getDryrun = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.v1.SubmitAnswerRequest} returns this
 */
proto.client.v1.SubmitAnswerRequest.prototype.setDryrun = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 current_page_id = 3;
 * @return {number}
 */
proto.client.v1.SubmitAnswerRequest.prototype.getCurrentPageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.v1.SubmitAnswerRequest} returns this
 */
proto.client.v1.SubmitAnswerRequest.prototype.setCurrentPageId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string session = 4;
 * @return {string}
 */
proto.client.v1.SubmitAnswerRequest.prototype.getSession = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.v1.SubmitAnswerRequest} returns this
 */
proto.client.v1.SubmitAnswerRequest.prototype.setSession = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated Answer answers = 2;
 * @return {!Array<!proto.client.v1.SubmitAnswerRequest.Answer>}
 */
proto.client.v1.SubmitAnswerRequest.prototype.getAnswersList = function() {
  return /** @type{!Array<!proto.client.v1.SubmitAnswerRequest.Answer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.client.v1.SubmitAnswerRequest.Answer, 2));
};


/**
 * @param {!Array<!proto.client.v1.SubmitAnswerRequest.Answer>} value
 * @return {!proto.client.v1.SubmitAnswerRequest} returns this
*/
proto.client.v1.SubmitAnswerRequest.prototype.setAnswersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.client.v1.SubmitAnswerRequest.Answer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.client.v1.SubmitAnswerRequest.Answer}
 */
proto.client.v1.SubmitAnswerRequest.prototype.addAnswers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.client.v1.SubmitAnswerRequest.Answer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.client.v1.SubmitAnswerRequest} returns this
 */
proto.client.v1.SubmitAnswerRequest.prototype.clearAnswersList = function() {
  return this.setAnswersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.client.v1.SubmitAnswerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.client.v1.SubmitAnswerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.client.v1.SubmitAnswerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.v1.SubmitAnswerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    nextPageId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    isCompleted: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    isDisqualified: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    isNonactive: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    redirectTo: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.client.v1.SubmitAnswerResponse}
 */
proto.client.v1.SubmitAnswerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.client.v1.SubmitAnswerResponse;
  return proto.client.v1.SubmitAnswerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.client.v1.SubmitAnswerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.client.v1.SubmitAnswerResponse}
 */
proto.client.v1.SubmitAnswerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNextPageId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsCompleted(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDisqualified(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsNonactive(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedirectTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.client.v1.SubmitAnswerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.client.v1.SubmitAnswerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.client.v1.SubmitAnswerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.client.v1.SubmitAnswerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNextPageId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getIsCompleted();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getIsDisqualified();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getIsNonactive();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getRedirectTo();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int32 next_page_id = 1;
 * @return {number}
 */
proto.client.v1.SubmitAnswerResponse.prototype.getNextPageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.client.v1.SubmitAnswerResponse} returns this
 */
proto.client.v1.SubmitAnswerResponse.prototype.setNextPageId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool is_completed = 2;
 * @return {boolean}
 */
proto.client.v1.SubmitAnswerResponse.prototype.getIsCompleted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.v1.SubmitAnswerResponse} returns this
 */
proto.client.v1.SubmitAnswerResponse.prototype.setIsCompleted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool is_disqualified = 3;
 * @return {boolean}
 */
proto.client.v1.SubmitAnswerResponse.prototype.getIsDisqualified = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.v1.SubmitAnswerResponse} returns this
 */
proto.client.v1.SubmitAnswerResponse.prototype.setIsDisqualified = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool is_nonactive = 4;
 * @return {boolean}
 */
proto.client.v1.SubmitAnswerResponse.prototype.getIsNonactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.client.v1.SubmitAnswerResponse} returns this
 */
proto.client.v1.SubmitAnswerResponse.prototype.setIsNonactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string redirect_to = 5;
 * @return {string}
 */
proto.client.v1.SubmitAnswerResponse.prototype.getRedirectTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.client.v1.SubmitAnswerResponse} returns this
 */
proto.client.v1.SubmitAnswerResponse.prototype.setRedirectTo = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


goog.object.extend(exports, proto.client.v1);
