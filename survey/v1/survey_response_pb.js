// source: survey/v1/survey_response.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.survey.v1.ResponseAnswerGetListRequest', null, global);
goog.exportSymbol('proto.survey.v1.ResponseAnswerGetListResponse', null, global);
goog.exportSymbol('proto.survey.v1.ResponseGetAllRequest', null, global);
goog.exportSymbol('proto.survey.v1.ResponseGetAllResponse', null, global);
goog.exportSymbol('proto.survey.v1.ResponseGetOneRequest', null, global);
goog.exportSymbol('proto.survey.v1.ResponseGetOneResponse', null, global);
goog.exportSymbol('proto.survey.v1.SurveyResponse', null, global);
goog.exportSymbol('proto.survey.v1.SurveyResponseAnswer', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.survey.v1.SurveyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.survey.v1.SurveyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.survey.v1.SurveyResponse.displayName = 'proto.survey.v1.SurveyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.survey.v1.SurveyResponseAnswer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.survey.v1.SurveyResponseAnswer.repeatedFields_, null);
};
goog.inherits(proto.survey.v1.SurveyResponseAnswer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.survey.v1.SurveyResponseAnswer.displayName = 'proto.survey.v1.SurveyResponseAnswer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.survey.v1.ResponseGetAllRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.survey.v1.ResponseGetAllRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.survey.v1.ResponseGetAllRequest.displayName = 'proto.survey.v1.ResponseGetAllRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.survey.v1.ResponseGetAllResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.survey.v1.ResponseGetAllResponse.repeatedFields_, null);
};
goog.inherits(proto.survey.v1.ResponseGetAllResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.survey.v1.ResponseGetAllResponse.displayName = 'proto.survey.v1.ResponseGetAllResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.survey.v1.ResponseGetOneRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.survey.v1.ResponseGetOneRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.survey.v1.ResponseGetOneRequest.displayName = 'proto.survey.v1.ResponseGetOneRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.survey.v1.ResponseGetOneResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.survey.v1.ResponseGetOneResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.survey.v1.ResponseGetOneResponse.displayName = 'proto.survey.v1.ResponseGetOneResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.survey.v1.ResponseAnswerGetListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.survey.v1.ResponseAnswerGetListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.survey.v1.ResponseAnswerGetListRequest.displayName = 'proto.survey.v1.ResponseAnswerGetListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.survey.v1.ResponseAnswerGetListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.survey.v1.ResponseAnswerGetListResponse.repeatedFields_, null);
};
goog.inherits(proto.survey.v1.ResponseAnswerGetListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.survey.v1.ResponseAnswerGetListResponse.displayName = 'proto.survey.v1.ResponseAnswerGetListResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.survey.v1.SurveyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.survey.v1.SurveyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.survey.v1.SurveyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.survey.v1.SurveyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    surveyId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    lastSurveyPageId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    session: jspb.Message.getFieldWithDefault(msg, 4, ""),
    url: jspb.Message.getFieldWithDefault(msg, 5, ""),
    urlParam: jspb.Message.getFieldWithDefault(msg, 6, ""),
    datetimeStart: (f = msg.getDatetimeStart()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    datetimeEnd: (f = msg.getDatetimeEnd()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.survey.v1.SurveyResponse}
 */
proto.survey.v1.SurveyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.survey.v1.SurveyResponse;
  return proto.survey.v1.SurveyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.survey.v1.SurveyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.survey.v1.SurveyResponse}
 */
proto.survey.v1.SurveyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSurveyId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLastSurveyPageId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSession(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrlParam(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDatetimeStart(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDatetimeEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.survey.v1.SurveyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.survey.v1.SurveyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.survey.v1.SurveyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.survey.v1.SurveyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSurveyId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getLastSurveyPageId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getSession();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUrlParam();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDatetimeStart();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDatetimeEnd();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.survey.v1.SurveyResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.survey.v1.SurveyResponse} returns this
 */
proto.survey.v1.SurveyResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 survey_id = 2;
 * @return {number}
 */
proto.survey.v1.SurveyResponse.prototype.getSurveyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.survey.v1.SurveyResponse} returns this
 */
proto.survey.v1.SurveyResponse.prototype.setSurveyId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 last_survey_page_id = 3;
 * @return {number}
 */
proto.survey.v1.SurveyResponse.prototype.getLastSurveyPageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.survey.v1.SurveyResponse} returns this
 */
proto.survey.v1.SurveyResponse.prototype.setLastSurveyPageId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string session = 4;
 * @return {string}
 */
proto.survey.v1.SurveyResponse.prototype.getSession = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.survey.v1.SurveyResponse} returns this
 */
proto.survey.v1.SurveyResponse.prototype.setSession = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string url = 5;
 * @return {string}
 */
proto.survey.v1.SurveyResponse.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.survey.v1.SurveyResponse} returns this
 */
proto.survey.v1.SurveyResponse.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string url_param = 6;
 * @return {string}
 */
proto.survey.v1.SurveyResponse.prototype.getUrlParam = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.survey.v1.SurveyResponse} returns this
 */
proto.survey.v1.SurveyResponse.prototype.setUrlParam = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp datetime_start = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.survey.v1.SurveyResponse.prototype.getDatetimeStart = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.survey.v1.SurveyResponse} returns this
*/
proto.survey.v1.SurveyResponse.prototype.setDatetimeStart = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.survey.v1.SurveyResponse} returns this
 */
proto.survey.v1.SurveyResponse.prototype.clearDatetimeStart = function() {
  return this.setDatetimeStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.survey.v1.SurveyResponse.prototype.hasDatetimeStart = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp datetime_end = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.survey.v1.SurveyResponse.prototype.getDatetimeEnd = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.survey.v1.SurveyResponse} returns this
*/
proto.survey.v1.SurveyResponse.prototype.setDatetimeEnd = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.survey.v1.SurveyResponse} returns this
 */
proto.survey.v1.SurveyResponse.prototype.clearDatetimeEnd = function() {
  return this.setDatetimeEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.survey.v1.SurveyResponse.prototype.hasDatetimeEnd = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.survey.v1.SurveyResponseAnswer.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.survey.v1.SurveyResponseAnswer.prototype.toObject = function(opt_includeInstance) {
  return proto.survey.v1.SurveyResponseAnswer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.survey.v1.SurveyResponseAnswer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.survey.v1.SurveyResponseAnswer.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    responseId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    questionId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    valuesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    datetimeCreated: (f = msg.getDatetimeCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.survey.v1.SurveyResponseAnswer}
 */
proto.survey.v1.SurveyResponseAnswer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.survey.v1.SurveyResponseAnswer;
  return proto.survey.v1.SurveyResponseAnswer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.survey.v1.SurveyResponseAnswer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.survey.v1.SurveyResponseAnswer}
 */
proto.survey.v1.SurveyResponseAnswer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResponseId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuestionId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDatetimeCreated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.survey.v1.SurveyResponseAnswer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.survey.v1.SurveyResponseAnswer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.survey.v1.SurveyResponseAnswer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.survey.v1.SurveyResponseAnswer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getResponseId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getQuestionId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getDatetimeCreated();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.survey.v1.SurveyResponseAnswer.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.survey.v1.SurveyResponseAnswer} returns this
 */
proto.survey.v1.SurveyResponseAnswer.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 response_id = 2;
 * @return {number}
 */
proto.survey.v1.SurveyResponseAnswer.prototype.getResponseId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.survey.v1.SurveyResponseAnswer} returns this
 */
proto.survey.v1.SurveyResponseAnswer.prototype.setResponseId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 question_id = 3;
 * @return {number}
 */
proto.survey.v1.SurveyResponseAnswer.prototype.getQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.survey.v1.SurveyResponseAnswer} returns this
 */
proto.survey.v1.SurveyResponseAnswer.prototype.setQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated string values = 4;
 * @return {!Array<string>}
 */
proto.survey.v1.SurveyResponseAnswer.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.survey.v1.SurveyResponseAnswer} returns this
 */
proto.survey.v1.SurveyResponseAnswer.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.survey.v1.SurveyResponseAnswer} returns this
 */
proto.survey.v1.SurveyResponseAnswer.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.survey.v1.SurveyResponseAnswer} returns this
 */
proto.survey.v1.SurveyResponseAnswer.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};


/**
 * optional google.protobuf.Timestamp datetime_created = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.survey.v1.SurveyResponseAnswer.prototype.getDatetimeCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.survey.v1.SurveyResponseAnswer} returns this
*/
proto.survey.v1.SurveyResponseAnswer.prototype.setDatetimeCreated = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.survey.v1.SurveyResponseAnswer} returns this
 */
proto.survey.v1.SurveyResponseAnswer.prototype.clearDatetimeCreated = function() {
  return this.setDatetimeCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.survey.v1.SurveyResponseAnswer.prototype.hasDatetimeCreated = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.survey.v1.ResponseGetAllRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.survey.v1.ResponseGetAllRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.survey.v1.ResponseGetAllRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.survey.v1.ResponseGetAllRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    surveyId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    page: jspb.Message.getFieldWithDefault(msg, 2, 0),
    contentPerPage: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.survey.v1.ResponseGetAllRequest}
 */
proto.survey.v1.ResponseGetAllRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.survey.v1.ResponseGetAllRequest;
  return proto.survey.v1.ResponseGetAllRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.survey.v1.ResponseGetAllRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.survey.v1.ResponseGetAllRequest}
 */
proto.survey.v1.ResponseGetAllRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSurveyId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setContentPerPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.survey.v1.ResponseGetAllRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.survey.v1.ResponseGetAllRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.survey.v1.ResponseGetAllRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.survey.v1.ResponseGetAllRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSurveyId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getContentPerPage();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 survey_id = 1;
 * @return {number}
 */
proto.survey.v1.ResponseGetAllRequest.prototype.getSurveyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.survey.v1.ResponseGetAllRequest} returns this
 */
proto.survey.v1.ResponseGetAllRequest.prototype.setSurveyId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 page = 2;
 * @return {number}
 */
proto.survey.v1.ResponseGetAllRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.survey.v1.ResponseGetAllRequest} returns this
 */
proto.survey.v1.ResponseGetAllRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 content_per_page = 3;
 * @return {number}
 */
proto.survey.v1.ResponseGetAllRequest.prototype.getContentPerPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.survey.v1.ResponseGetAllRequest} returns this
 */
proto.survey.v1.ResponseGetAllRequest.prototype.setContentPerPage = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.survey.v1.ResponseGetAllResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.survey.v1.ResponseGetAllResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.survey.v1.ResponseGetAllResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.survey.v1.ResponseGetAllResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.survey.v1.ResponseGetAllResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    responseList: jspb.Message.toObjectList(msg.getResponseList(),
    proto.survey.v1.SurveyResponse.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0),
    maxPage: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.survey.v1.ResponseGetAllResponse}
 */
proto.survey.v1.ResponseGetAllResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.survey.v1.ResponseGetAllResponse;
  return proto.survey.v1.ResponseGetAllResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.survey.v1.ResponseGetAllResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.survey.v1.ResponseGetAllResponse}
 */
proto.survey.v1.ResponseGetAllResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.survey.v1.SurveyResponse;
      reader.readMessage(value,proto.survey.v1.SurveyResponse.deserializeBinaryFromReader);
      msg.addResponse(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.survey.v1.ResponseGetAllResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.survey.v1.ResponseGetAllResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.survey.v1.ResponseGetAllResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.survey.v1.ResponseGetAllResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponseList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.survey.v1.SurveyResponse.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMaxPage();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * repeated SurveyResponse response = 1;
 * @return {!Array<!proto.survey.v1.SurveyResponse>}
 */
proto.survey.v1.ResponseGetAllResponse.prototype.getResponseList = function() {
  return /** @type{!Array<!proto.survey.v1.SurveyResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.survey.v1.SurveyResponse, 1));
};


/**
 * @param {!Array<!proto.survey.v1.SurveyResponse>} value
 * @return {!proto.survey.v1.ResponseGetAllResponse} returns this
*/
proto.survey.v1.ResponseGetAllResponse.prototype.setResponseList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.survey.v1.SurveyResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.survey.v1.SurveyResponse}
 */
proto.survey.v1.ResponseGetAllResponse.prototype.addResponse = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.survey.v1.SurveyResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.survey.v1.ResponseGetAllResponse} returns this
 */
proto.survey.v1.ResponseGetAllResponse.prototype.clearResponseList = function() {
  return this.setResponseList([]);
};


/**
 * optional int32 count = 2;
 * @return {number}
 */
proto.survey.v1.ResponseGetAllResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.survey.v1.ResponseGetAllResponse} returns this
 */
proto.survey.v1.ResponseGetAllResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 max_page = 3;
 * @return {number}
 */
proto.survey.v1.ResponseGetAllResponse.prototype.getMaxPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.survey.v1.ResponseGetAllResponse} returns this
 */
proto.survey.v1.ResponseGetAllResponse.prototype.setMaxPage = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.survey.v1.ResponseGetOneRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.survey.v1.ResponseGetOneRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.survey.v1.ResponseGetOneRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.survey.v1.ResponseGetOneRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    responseId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.survey.v1.ResponseGetOneRequest}
 */
proto.survey.v1.ResponseGetOneRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.survey.v1.ResponseGetOneRequest;
  return proto.survey.v1.ResponseGetOneRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.survey.v1.ResponseGetOneRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.survey.v1.ResponseGetOneRequest}
 */
proto.survey.v1.ResponseGetOneRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResponseId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.survey.v1.ResponseGetOneRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.survey.v1.ResponseGetOneRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.survey.v1.ResponseGetOneRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.survey.v1.ResponseGetOneRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponseId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 response_id = 1;
 * @return {number}
 */
proto.survey.v1.ResponseGetOneRequest.prototype.getResponseId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.survey.v1.ResponseGetOneRequest} returns this
 */
proto.survey.v1.ResponseGetOneRequest.prototype.setResponseId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.survey.v1.ResponseGetOneResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.survey.v1.ResponseGetOneResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.survey.v1.ResponseGetOneResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.survey.v1.ResponseGetOneResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    response: (f = msg.getResponse()) && proto.survey.v1.SurveyResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.survey.v1.ResponseGetOneResponse}
 */
proto.survey.v1.ResponseGetOneResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.survey.v1.ResponseGetOneResponse;
  return proto.survey.v1.ResponseGetOneResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.survey.v1.ResponseGetOneResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.survey.v1.ResponseGetOneResponse}
 */
proto.survey.v1.ResponseGetOneResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.survey.v1.SurveyResponse;
      reader.readMessage(value,proto.survey.v1.SurveyResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.survey.v1.ResponseGetOneResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.survey.v1.ResponseGetOneResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.survey.v1.ResponseGetOneResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.survey.v1.ResponseGetOneResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.survey.v1.SurveyResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional SurveyResponse response = 1;
 * @return {?proto.survey.v1.SurveyResponse}
 */
proto.survey.v1.ResponseGetOneResponse.prototype.getResponse = function() {
  return /** @type{?proto.survey.v1.SurveyResponse} */ (
    jspb.Message.getWrapperField(this, proto.survey.v1.SurveyResponse, 1));
};


/**
 * @param {?proto.survey.v1.SurveyResponse|undefined} value
 * @return {!proto.survey.v1.ResponseGetOneResponse} returns this
*/
proto.survey.v1.ResponseGetOneResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.survey.v1.ResponseGetOneResponse} returns this
 */
proto.survey.v1.ResponseGetOneResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.survey.v1.ResponseGetOneResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.survey.v1.ResponseAnswerGetListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.survey.v1.ResponseAnswerGetListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.survey.v1.ResponseAnswerGetListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.survey.v1.ResponseAnswerGetListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    responseId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    questionId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.survey.v1.ResponseAnswerGetListRequest}
 */
proto.survey.v1.ResponseAnswerGetListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.survey.v1.ResponseAnswerGetListRequest;
  return proto.survey.v1.ResponseAnswerGetListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.survey.v1.ResponseAnswerGetListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.survey.v1.ResponseAnswerGetListRequest}
 */
proto.survey.v1.ResponseAnswerGetListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResponseId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuestionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.survey.v1.ResponseAnswerGetListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.survey.v1.ResponseAnswerGetListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.survey.v1.ResponseAnswerGetListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.survey.v1.ResponseAnswerGetListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponseId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getQuestionId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 response_id = 1;
 * @return {number}
 */
proto.survey.v1.ResponseAnswerGetListRequest.prototype.getResponseId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.survey.v1.ResponseAnswerGetListRequest} returns this
 */
proto.survey.v1.ResponseAnswerGetListRequest.prototype.setResponseId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 question_id = 2;
 * @return {number}
 */
proto.survey.v1.ResponseAnswerGetListRequest.prototype.getQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.survey.v1.ResponseAnswerGetListRequest} returns this
 */
proto.survey.v1.ResponseAnswerGetListRequest.prototype.setQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.survey.v1.ResponseAnswerGetListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.survey.v1.ResponseAnswerGetListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.survey.v1.ResponseAnswerGetListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.survey.v1.ResponseAnswerGetListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.survey.v1.ResponseAnswerGetListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    answersList: jspb.Message.toObjectList(msg.getAnswersList(),
    proto.survey.v1.SurveyResponseAnswer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.survey.v1.ResponseAnswerGetListResponse}
 */
proto.survey.v1.ResponseAnswerGetListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.survey.v1.ResponseAnswerGetListResponse;
  return proto.survey.v1.ResponseAnswerGetListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.survey.v1.ResponseAnswerGetListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.survey.v1.ResponseAnswerGetListResponse}
 */
proto.survey.v1.ResponseAnswerGetListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.survey.v1.SurveyResponseAnswer;
      reader.readMessage(value,proto.survey.v1.SurveyResponseAnswer.deserializeBinaryFromReader);
      msg.addAnswers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.survey.v1.ResponseAnswerGetListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.survey.v1.ResponseAnswerGetListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.survey.v1.ResponseAnswerGetListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.survey.v1.ResponseAnswerGetListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnswersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.survey.v1.SurveyResponseAnswer.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SurveyResponseAnswer answers = 1;
 * @return {!Array<!proto.survey.v1.SurveyResponseAnswer>}
 */
proto.survey.v1.ResponseAnswerGetListResponse.prototype.getAnswersList = function() {
  return /** @type{!Array<!proto.survey.v1.SurveyResponseAnswer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.survey.v1.SurveyResponseAnswer, 1));
};


/**
 * @param {!Array<!proto.survey.v1.SurveyResponseAnswer>} value
 * @return {!proto.survey.v1.ResponseAnswerGetListResponse} returns this
*/
proto.survey.v1.ResponseAnswerGetListResponse.prototype.setAnswersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.survey.v1.SurveyResponseAnswer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.survey.v1.SurveyResponseAnswer}
 */
proto.survey.v1.ResponseAnswerGetListResponse.prototype.addAnswers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.survey.v1.SurveyResponseAnswer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.survey.v1.ResponseAnswerGetListResponse} returns this
 */
proto.survey.v1.ResponseAnswerGetListResponse.prototype.clearAnswersList = function() {
  return this.setAnswersList([]);
};


goog.object.extend(exports, proto.survey.v1);
