// source: web/survey/v1/types.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.web.survey.v1.MethodType', null, global);
goog.exportSymbol('proto.web.survey.v1.Survey', null, global);
goog.exportSymbol('proto.web.survey.v1.SurveyChoice', null, global);
goog.exportSymbol('proto.web.survey.v1.SurveyLogicPageAction', null, global);
goog.exportSymbol('proto.web.survey.v1.SurveyLogicPageActionFromType', null, global);
goog.exportSymbol('proto.web.survey.v1.SurveyLogicPageActionToType', null, global);
goog.exportSymbol('proto.web.survey.v1.SurveyLogicPageGate', null, global);
goog.exportSymbol('proto.web.survey.v1.SurveyLogicPageGateComparisonType', null, global);
goog.exportSymbol('proto.web.survey.v1.SurveyLogicPageGateFromType', null, global);
goog.exportSymbol('proto.web.survey.v1.SurveyLogicPageSource', null, global);
goog.exportSymbol('proto.web.survey.v1.SurveyLogicPageSourceComparisonType', null, global);
goog.exportSymbol('proto.web.survey.v1.SurveyPage', null, global);
goog.exportSymbol('proto.web.survey.v1.SurveyPageRedirect', null, global);
goog.exportSymbol('proto.web.survey.v1.SurveyQuestion', null, global);
goog.exportSymbol('proto.web.survey.v1.SurveyQuestionOption', null, global);
goog.exportSymbol('proto.web.survey.v1.SurveyQuestionType', null, global);
goog.exportSymbol('proto.web.survey.v1.SurveyResponse', null, global);
goog.exportSymbol('proto.web.survey.v1.SurveyResponseAnswer', null, global);
goog.exportSymbol('proto.web.survey.v1.SurveyType', null, global);
goog.exportSymbol('proto.web.survey.v1.Webhook', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.Survey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.Survey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.Survey.displayName = 'proto.web.survey.v1.Survey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.SurveyPage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.web.survey.v1.SurveyPage.repeatedFields_, null);
};
goog.inherits(proto.web.survey.v1.SurveyPage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.SurveyPage.displayName = 'proto.web.survey.v1.SurveyPage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.SurveyQuestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.web.survey.v1.SurveyQuestion.repeatedFields_, null);
};
goog.inherits(proto.web.survey.v1.SurveyQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.SurveyQuestion.displayName = 'proto.web.survey.v1.SurveyQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.SurveyQuestionOption = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.SurveyQuestionOption, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.SurveyQuestionOption.displayName = 'proto.web.survey.v1.SurveyQuestionOption';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.SurveyChoice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.SurveyChoice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.SurveyChoice.displayName = 'proto.web.survey.v1.SurveyChoice';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.SurveyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.SurveyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.SurveyResponse.displayName = 'proto.web.survey.v1.SurveyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.SurveyResponseAnswer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.web.survey.v1.SurveyResponseAnswer.repeatedFields_, null);
};
goog.inherits(proto.web.survey.v1.SurveyResponseAnswer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.SurveyResponseAnswer.displayName = 'proto.web.survey.v1.SurveyResponseAnswer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.SurveyLogicPageSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.SurveyLogicPageSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.SurveyLogicPageSource.displayName = 'proto.web.survey.v1.SurveyLogicPageSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.SurveyLogicPageGate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.SurveyLogicPageGate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.SurveyLogicPageGate.displayName = 'proto.web.survey.v1.SurveyLogicPageGate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.SurveyLogicPageAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.SurveyLogicPageAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.SurveyLogicPageAction.displayName = 'proto.web.survey.v1.SurveyLogicPageAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.Webhook = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.Webhook, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.Webhook.displayName = 'proto.web.survey.v1.Webhook';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.SurveyPageRedirect = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.SurveyPageRedirect, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.SurveyPageRedirect.displayName = 'proto.web.survey.v1.SurveyPageRedirect';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.Survey.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.Survey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.Survey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.Survey.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    datetimeCreated: (f = msg.getDatetimeCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    datetimeUpdated: (f = msg.getDatetimeUpdated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    organizationId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    type: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.Survey}
 */
proto.web.survey.v1.Survey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.Survey;
  return proto.web.survey.v1.Survey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.Survey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.Survey}
 */
proto.web.survey.v1.Survey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDatetimeCreated(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDatetimeUpdated(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrganizationId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {!proto.web.survey.v1.SurveyType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.Survey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.Survey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.Survey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.Survey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDatetimeCreated();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDatetimeUpdated();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getOrganizationId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.web.survey.v1.Survey.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.Survey} returns this
 */
proto.web.survey.v1.Survey.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp datetime_created = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.web.survey.v1.Survey.prototype.getDatetimeCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.web.survey.v1.Survey} returns this
*/
proto.web.survey.v1.Survey.prototype.setDatetimeCreated = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.web.survey.v1.Survey} returns this
 */
proto.web.survey.v1.Survey.prototype.clearDatetimeCreated = function() {
  return this.setDatetimeCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.web.survey.v1.Survey.prototype.hasDatetimeCreated = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp datetime_updated = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.web.survey.v1.Survey.prototype.getDatetimeUpdated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.web.survey.v1.Survey} returns this
*/
proto.web.survey.v1.Survey.prototype.setDatetimeUpdated = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.web.survey.v1.Survey} returns this
 */
proto.web.survey.v1.Survey.prototype.clearDatetimeUpdated = function() {
  return this.setDatetimeUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.web.survey.v1.Survey.prototype.hasDatetimeUpdated = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 organization_id = 4;
 * @return {number}
 */
proto.web.survey.v1.Survey.prototype.getOrganizationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.Survey} returns this
 */
proto.web.survey.v1.Survey.prototype.setOrganizationId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.web.survey.v1.Survey.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.Survey} returns this
 */
proto.web.survey.v1.Survey.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional SurveyType type = 6;
 * @return {!proto.web.survey.v1.SurveyType}
 */
proto.web.survey.v1.Survey.prototype.getType = function() {
  return /** @type {!proto.web.survey.v1.SurveyType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.web.survey.v1.SurveyType} value
 * @return {!proto.web.survey.v1.Survey} returns this
 */
proto.web.survey.v1.Survey.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.web.survey.v1.SurveyPage.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.SurveyPage.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.SurveyPage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.SurveyPage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.SurveyPage.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    surveyId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    orders: jspb.Message.getFieldWithDefault(msg, 3, 0),
    questionsList: jspb.Message.toObjectList(msg.getQuestionsList(),
    proto.web.survey.v1.SurveyQuestion.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.SurveyPage}
 */
proto.web.survey.v1.SurveyPage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.SurveyPage;
  return proto.web.survey.v1.SurveyPage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.SurveyPage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.SurveyPage}
 */
proto.web.survey.v1.SurveyPage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSurveyId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrders(value);
      break;
    case 4:
      var value = new proto.web.survey.v1.SurveyQuestion;
      reader.readMessage(value,proto.web.survey.v1.SurveyQuestion.deserializeBinaryFromReader);
      msg.addQuestions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.SurveyPage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.SurveyPage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.SurveyPage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.SurveyPage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSurveyId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOrders();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getQuestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.web.survey.v1.SurveyQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.web.survey.v1.SurveyPage.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyPage} returns this
 */
proto.web.survey.v1.SurveyPage.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 survey_id = 2;
 * @return {number}
 */
proto.web.survey.v1.SurveyPage.prototype.getSurveyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyPage} returns this
 */
proto.web.survey.v1.SurveyPage.prototype.setSurveyId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 orders = 3;
 * @return {number}
 */
proto.web.survey.v1.SurveyPage.prototype.getOrders = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyPage} returns this
 */
proto.web.survey.v1.SurveyPage.prototype.setOrders = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated SurveyQuestion questions = 4;
 * @return {!Array<!proto.web.survey.v1.SurveyQuestion>}
 */
proto.web.survey.v1.SurveyPage.prototype.getQuestionsList = function() {
  return /** @type{!Array<!proto.web.survey.v1.SurveyQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.web.survey.v1.SurveyQuestion, 4));
};


/**
 * @param {!Array<!proto.web.survey.v1.SurveyQuestion>} value
 * @return {!proto.web.survey.v1.SurveyPage} returns this
*/
proto.web.survey.v1.SurveyPage.prototype.setQuestionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.web.survey.v1.SurveyQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.web.survey.v1.SurveyQuestion}
 */
proto.web.survey.v1.SurveyPage.prototype.addQuestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.web.survey.v1.SurveyQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.web.survey.v1.SurveyPage} returns this
 */
proto.web.survey.v1.SurveyPage.prototype.clearQuestionsList = function() {
  return this.setQuestionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.web.survey.v1.SurveyQuestion.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.SurveyQuestion.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.SurveyQuestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.SurveyQuestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.SurveyQuestion.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    surveyPageId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    question: jspb.Message.getFieldWithDefault(msg, 3, ""),
    orders: jspb.Message.getFieldWithDefault(msg, 4, 0),
    type: jspb.Message.getFieldWithDefault(msg, 5, 0),
    option: (f = msg.getOption()) && proto.web.survey.v1.SurveyQuestionOption.toObject(includeInstance, f),
    choicesList: jspb.Message.toObjectList(msg.getChoicesList(),
    proto.web.survey.v1.SurveyChoice.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.SurveyQuestion}
 */
proto.web.survey.v1.SurveyQuestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.SurveyQuestion;
  return proto.web.survey.v1.SurveyQuestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.SurveyQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.SurveyQuestion}
 */
proto.web.survey.v1.SurveyQuestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSurveyPageId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrders(value);
      break;
    case 5:
      var value = /** @type {!proto.web.survey.v1.SurveyQuestionType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 6:
      var value = new proto.web.survey.v1.SurveyQuestionOption;
      reader.readMessage(value,proto.web.survey.v1.SurveyQuestionOption.deserializeBinaryFromReader);
      msg.setOption(value);
      break;
    case 7:
      var value = new proto.web.survey.v1.SurveyChoice;
      reader.readMessage(value,proto.web.survey.v1.SurveyChoice.deserializeBinaryFromReader);
      msg.addChoices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.SurveyQuestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.SurveyQuestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.SurveyQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.SurveyQuestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSurveyPageId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOrders();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getOption();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.web.survey.v1.SurveyQuestionOption.serializeBinaryToWriter
    );
  }
  f = message.getChoicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.web.survey.v1.SurveyChoice.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.web.survey.v1.SurveyQuestion.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyQuestion} returns this
 */
proto.web.survey.v1.SurveyQuestion.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 survey_page_id = 2;
 * @return {number}
 */
proto.web.survey.v1.SurveyQuestion.prototype.getSurveyPageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyQuestion} returns this
 */
proto.web.survey.v1.SurveyQuestion.prototype.setSurveyPageId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string question = 3;
 * @return {string}
 */
proto.web.survey.v1.SurveyQuestion.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.SurveyQuestion} returns this
 */
proto.web.survey.v1.SurveyQuestion.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 orders = 4;
 * @return {number}
 */
proto.web.survey.v1.SurveyQuestion.prototype.getOrders = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyQuestion} returns this
 */
proto.web.survey.v1.SurveyQuestion.prototype.setOrders = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional SurveyQuestionType type = 5;
 * @return {!proto.web.survey.v1.SurveyQuestionType}
 */
proto.web.survey.v1.SurveyQuestion.prototype.getType = function() {
  return /** @type {!proto.web.survey.v1.SurveyQuestionType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.web.survey.v1.SurveyQuestionType} value
 * @return {!proto.web.survey.v1.SurveyQuestion} returns this
 */
proto.web.survey.v1.SurveyQuestion.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional SurveyQuestionOption option = 6;
 * @return {?proto.web.survey.v1.SurveyQuestionOption}
 */
proto.web.survey.v1.SurveyQuestion.prototype.getOption = function() {
  return /** @type{?proto.web.survey.v1.SurveyQuestionOption} */ (
    jspb.Message.getWrapperField(this, proto.web.survey.v1.SurveyQuestionOption, 6));
};


/**
 * @param {?proto.web.survey.v1.SurveyQuestionOption|undefined} value
 * @return {!proto.web.survey.v1.SurveyQuestion} returns this
*/
proto.web.survey.v1.SurveyQuestion.prototype.setOption = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.web.survey.v1.SurveyQuestion} returns this
 */
proto.web.survey.v1.SurveyQuestion.prototype.clearOption = function() {
  return this.setOption(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.web.survey.v1.SurveyQuestion.prototype.hasOption = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated SurveyChoice choices = 7;
 * @return {!Array<!proto.web.survey.v1.SurveyChoice>}
 */
proto.web.survey.v1.SurveyQuestion.prototype.getChoicesList = function() {
  return /** @type{!Array<!proto.web.survey.v1.SurveyChoice>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.web.survey.v1.SurveyChoice, 7));
};


/**
 * @param {!Array<!proto.web.survey.v1.SurveyChoice>} value
 * @return {!proto.web.survey.v1.SurveyQuestion} returns this
*/
proto.web.survey.v1.SurveyQuestion.prototype.setChoicesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.web.survey.v1.SurveyChoice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.web.survey.v1.SurveyChoice}
 */
proto.web.survey.v1.SurveyQuestion.prototype.addChoices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.web.survey.v1.SurveyChoice, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.web.survey.v1.SurveyQuestion} returns this
 */
proto.web.survey.v1.SurveyQuestion.prototype.clearChoicesList = function() {
  return this.setChoicesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.SurveyQuestionOption.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.SurveyQuestionOption.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.SurveyQuestionOption} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.SurveyQuestionOption.toObject = function(includeInstance, msg) {
  var f, obj = {
    isRequired: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    isRandomChoice: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    isTextfieldOnlyNumber: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    isTextfieldMultiline: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    redirectUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    redirectTimeOffset: jspb.Message.getFieldWithDefault(msg, 6, 0),
    webhookUrl: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.SurveyQuestionOption}
 */
proto.web.survey.v1.SurveyQuestionOption.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.SurveyQuestionOption;
  return proto.web.survey.v1.SurveyQuestionOption.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.SurveyQuestionOption} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.SurveyQuestionOption}
 */
proto.web.survey.v1.SurveyQuestionOption.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRequired(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRandomChoice(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsTextfieldOnlyNumber(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsTextfieldMultiline(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedirectUrl(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRedirectTimeOffset(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebhookUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.SurveyQuestionOption.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.SurveyQuestionOption.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.SurveyQuestionOption} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.SurveyQuestionOption.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsRequired();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getIsRandomChoice();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getIsTextfieldOnlyNumber();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getIsTextfieldMultiline();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getRedirectUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRedirectTimeOffset();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getWebhookUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional bool is_required = 1;
 * @return {boolean}
 */
proto.web.survey.v1.SurveyQuestionOption.prototype.getIsRequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.web.survey.v1.SurveyQuestionOption} returns this
 */
proto.web.survey.v1.SurveyQuestionOption.prototype.setIsRequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool is_random_choice = 2;
 * @return {boolean}
 */
proto.web.survey.v1.SurveyQuestionOption.prototype.getIsRandomChoice = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.web.survey.v1.SurveyQuestionOption} returns this
 */
proto.web.survey.v1.SurveyQuestionOption.prototype.setIsRandomChoice = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool is_textfield_only_number = 3;
 * @return {boolean}
 */
proto.web.survey.v1.SurveyQuestionOption.prototype.getIsTextfieldOnlyNumber = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.web.survey.v1.SurveyQuestionOption} returns this
 */
proto.web.survey.v1.SurveyQuestionOption.prototype.setIsTextfieldOnlyNumber = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool is_textfield_multiline = 4;
 * @return {boolean}
 */
proto.web.survey.v1.SurveyQuestionOption.prototype.getIsTextfieldMultiline = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.web.survey.v1.SurveyQuestionOption} returns this
 */
proto.web.survey.v1.SurveyQuestionOption.prototype.setIsTextfieldMultiline = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string redirect_url = 5;
 * @return {string}
 */
proto.web.survey.v1.SurveyQuestionOption.prototype.getRedirectUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.SurveyQuestionOption} returns this
 */
proto.web.survey.v1.SurveyQuestionOption.prototype.setRedirectUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 redirect_time_offset = 6;
 * @return {number}
 */
proto.web.survey.v1.SurveyQuestionOption.prototype.getRedirectTimeOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyQuestionOption} returns this
 */
proto.web.survey.v1.SurveyQuestionOption.prototype.setRedirectTimeOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string webhook_url = 7;
 * @return {string}
 */
proto.web.survey.v1.SurveyQuestionOption.prototype.getWebhookUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.SurveyQuestionOption} returns this
 */
proto.web.survey.v1.SurveyQuestionOption.prototype.setWebhookUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.SurveyChoice.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.SurveyChoice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.SurveyChoice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.SurveyChoice.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    surveyQuestionId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    choice: jspb.Message.getFieldWithDefault(msg, 3, ""),
    orders: jspb.Message.getFieldWithDefault(msg, 4, 0),
    score: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.SurveyChoice}
 */
proto.web.survey.v1.SurveyChoice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.SurveyChoice;
  return proto.web.survey.v1.SurveyChoice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.SurveyChoice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.SurveyChoice}
 */
proto.web.survey.v1.SurveyChoice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSurveyQuestionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setChoice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrders(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.SurveyChoice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.SurveyChoice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.SurveyChoice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.SurveyChoice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSurveyQuestionId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getChoice();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOrders();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.web.survey.v1.SurveyChoice.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyChoice} returns this
 */
proto.web.survey.v1.SurveyChoice.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 survey_question_id = 2;
 * @return {number}
 */
proto.web.survey.v1.SurveyChoice.prototype.getSurveyQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyChoice} returns this
 */
proto.web.survey.v1.SurveyChoice.prototype.setSurveyQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string choice = 3;
 * @return {string}
 */
proto.web.survey.v1.SurveyChoice.prototype.getChoice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.SurveyChoice} returns this
 */
proto.web.survey.v1.SurveyChoice.prototype.setChoice = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 orders = 4;
 * @return {number}
 */
proto.web.survey.v1.SurveyChoice.prototype.getOrders = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyChoice} returns this
 */
proto.web.survey.v1.SurveyChoice.prototype.setOrders = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 score = 5;
 * @return {number}
 */
proto.web.survey.v1.SurveyChoice.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyChoice} returns this
 */
proto.web.survey.v1.SurveyChoice.prototype.setScore = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.SurveyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.SurveyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.SurveyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.SurveyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    surveyId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    lastSurveyPageId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    session: jspb.Message.getFieldWithDefault(msg, 4, ""),
    url: jspb.Message.getFieldWithDefault(msg, 5, ""),
    urlParam: jspb.Message.getFieldWithDefault(msg, 6, ""),
    datetimeStart: (f = msg.getDatetimeStart()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    datetimeEnd: (f = msg.getDatetimeEnd()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.SurveyResponse}
 */
proto.web.survey.v1.SurveyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.SurveyResponse;
  return proto.web.survey.v1.SurveyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.SurveyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.SurveyResponse}
 */
proto.web.survey.v1.SurveyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSurveyId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLastSurveyPageId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSession(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrlParam(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDatetimeStart(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDatetimeEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.SurveyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.SurveyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.SurveyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.SurveyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSurveyId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getLastSurveyPageId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getSession();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUrlParam();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDatetimeStart();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDatetimeEnd();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.web.survey.v1.SurveyResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyResponse} returns this
 */
proto.web.survey.v1.SurveyResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 survey_id = 2;
 * @return {number}
 */
proto.web.survey.v1.SurveyResponse.prototype.getSurveyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyResponse} returns this
 */
proto.web.survey.v1.SurveyResponse.prototype.setSurveyId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 last_survey_page_id = 3;
 * @return {number}
 */
proto.web.survey.v1.SurveyResponse.prototype.getLastSurveyPageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyResponse} returns this
 */
proto.web.survey.v1.SurveyResponse.prototype.setLastSurveyPageId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string session = 4;
 * @return {string}
 */
proto.web.survey.v1.SurveyResponse.prototype.getSession = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.SurveyResponse} returns this
 */
proto.web.survey.v1.SurveyResponse.prototype.setSession = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string url = 5;
 * @return {string}
 */
proto.web.survey.v1.SurveyResponse.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.SurveyResponse} returns this
 */
proto.web.survey.v1.SurveyResponse.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string url_param = 6;
 * @return {string}
 */
proto.web.survey.v1.SurveyResponse.prototype.getUrlParam = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.SurveyResponse} returns this
 */
proto.web.survey.v1.SurveyResponse.prototype.setUrlParam = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp datetime_start = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.web.survey.v1.SurveyResponse.prototype.getDatetimeStart = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.web.survey.v1.SurveyResponse} returns this
*/
proto.web.survey.v1.SurveyResponse.prototype.setDatetimeStart = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.web.survey.v1.SurveyResponse} returns this
 */
proto.web.survey.v1.SurveyResponse.prototype.clearDatetimeStart = function() {
  return this.setDatetimeStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.web.survey.v1.SurveyResponse.prototype.hasDatetimeStart = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp datetime_end = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.web.survey.v1.SurveyResponse.prototype.getDatetimeEnd = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.web.survey.v1.SurveyResponse} returns this
*/
proto.web.survey.v1.SurveyResponse.prototype.setDatetimeEnd = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.web.survey.v1.SurveyResponse} returns this
 */
proto.web.survey.v1.SurveyResponse.prototype.clearDatetimeEnd = function() {
  return this.setDatetimeEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.web.survey.v1.SurveyResponse.prototype.hasDatetimeEnd = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.web.survey.v1.SurveyResponseAnswer.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.SurveyResponseAnswer.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.SurveyResponseAnswer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.SurveyResponseAnswer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.SurveyResponseAnswer.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    responseId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    questionId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    valuesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    datetimeCreated: (f = msg.getDatetimeCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.SurveyResponseAnswer}
 */
proto.web.survey.v1.SurveyResponseAnswer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.SurveyResponseAnswer;
  return proto.web.survey.v1.SurveyResponseAnswer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.SurveyResponseAnswer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.SurveyResponseAnswer}
 */
proto.web.survey.v1.SurveyResponseAnswer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResponseId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuestionId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDatetimeCreated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.SurveyResponseAnswer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.SurveyResponseAnswer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.SurveyResponseAnswer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.SurveyResponseAnswer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getResponseId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getQuestionId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getDatetimeCreated();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.web.survey.v1.SurveyResponseAnswer.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyResponseAnswer} returns this
 */
proto.web.survey.v1.SurveyResponseAnswer.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 response_id = 2;
 * @return {number}
 */
proto.web.survey.v1.SurveyResponseAnswer.prototype.getResponseId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyResponseAnswer} returns this
 */
proto.web.survey.v1.SurveyResponseAnswer.prototype.setResponseId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 question_id = 3;
 * @return {number}
 */
proto.web.survey.v1.SurveyResponseAnswer.prototype.getQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyResponseAnswer} returns this
 */
proto.web.survey.v1.SurveyResponseAnswer.prototype.setQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated string values = 4;
 * @return {!Array<string>}
 */
proto.web.survey.v1.SurveyResponseAnswer.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.web.survey.v1.SurveyResponseAnswer} returns this
 */
proto.web.survey.v1.SurveyResponseAnswer.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.web.survey.v1.SurveyResponseAnswer} returns this
 */
proto.web.survey.v1.SurveyResponseAnswer.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.web.survey.v1.SurveyResponseAnswer} returns this
 */
proto.web.survey.v1.SurveyResponseAnswer.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};


/**
 * optional google.protobuf.Timestamp datetime_created = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.web.survey.v1.SurveyResponseAnswer.prototype.getDatetimeCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.web.survey.v1.SurveyResponseAnswer} returns this
*/
proto.web.survey.v1.SurveyResponseAnswer.prototype.setDatetimeCreated = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.web.survey.v1.SurveyResponseAnswer} returns this
 */
proto.web.survey.v1.SurveyResponseAnswer.prototype.clearDatetimeCreated = function() {
  return this.setDatetimeCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.web.survey.v1.SurveyResponseAnswer.prototype.hasDatetimeCreated = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.SurveyLogicPageSource.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.SurveyLogicPageSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.SurveyLogicPageSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.SurveyLogicPageSource.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 6, ""),
    surveyPageId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    comparison: jspb.Message.getFieldWithDefault(msg, 3, 0),
    value: jspb.Message.getFieldWithDefault(msg, 4, ""),
    fromSurveyQuestionId: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.SurveyLogicPageSource}
 */
proto.web.survey.v1.SurveyLogicPageSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.SurveyLogicPageSource;
  return proto.web.survey.v1.SurveyLogicPageSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.SurveyLogicPageSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.SurveyLogicPageSource}
 */
proto.web.survey.v1.SurveyLogicPageSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSurveyPageId(value);
      break;
    case 3:
      var value = /** @type {!proto.web.survey.v1.SurveyLogicPageSourceComparisonType} */ (reader.readEnum());
      msg.setComparison(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFromSurveyQuestionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.SurveyLogicPageSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.SurveyLogicPageSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.SurveyLogicPageSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.SurveyLogicPageSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSurveyPageId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getComparison();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFromSurveyQuestionId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.web.survey.v1.SurveyLogicPageSource.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyLogicPageSource} returns this
 */
proto.web.survey.v1.SurveyLogicPageSource.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 6;
 * @return {string}
 */
proto.web.survey.v1.SurveyLogicPageSource.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.SurveyLogicPageSource} returns this
 */
proto.web.survey.v1.SurveyLogicPageSource.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 survey_page_id = 2;
 * @return {number}
 */
proto.web.survey.v1.SurveyLogicPageSource.prototype.getSurveyPageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyLogicPageSource} returns this
 */
proto.web.survey.v1.SurveyLogicPageSource.prototype.setSurveyPageId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional SurveyLogicPageSourceComparisonType comparison = 3;
 * @return {!proto.web.survey.v1.SurveyLogicPageSourceComparisonType}
 */
proto.web.survey.v1.SurveyLogicPageSource.prototype.getComparison = function() {
  return /** @type {!proto.web.survey.v1.SurveyLogicPageSourceComparisonType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.web.survey.v1.SurveyLogicPageSourceComparisonType} value
 * @return {!proto.web.survey.v1.SurveyLogicPageSource} returns this
 */
proto.web.survey.v1.SurveyLogicPageSource.prototype.setComparison = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string value = 4;
 * @return {string}
 */
proto.web.survey.v1.SurveyLogicPageSource.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.SurveyLogicPageSource} returns this
 */
proto.web.survey.v1.SurveyLogicPageSource.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 from_survey_question_id = 5;
 * @return {number}
 */
proto.web.survey.v1.SurveyLogicPageSource.prototype.getFromSurveyQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyLogicPageSource} returns this
 */
proto.web.survey.v1.SurveyLogicPageSource.prototype.setFromSurveyQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.SurveyLogicPageGate.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.SurveyLogicPageGate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.SurveyLogicPageGate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.SurveyLogicPageGate.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 10, ""),
    surveyPageId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    comparison: jspb.Message.getFieldWithDefault(msg, 3, 0),
    from1Selector: jspb.Message.getFieldWithDefault(msg, 4, 0),
    from1LogicPageSourceId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    from1LogicPageGateId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    from2Selector: jspb.Message.getFieldWithDefault(msg, 7, 0),
    from2LogicPageSourceId: jspb.Message.getFieldWithDefault(msg, 8, 0),
    from2LogicPageGateId: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.SurveyLogicPageGate}
 */
proto.web.survey.v1.SurveyLogicPageGate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.SurveyLogicPageGate;
  return proto.web.survey.v1.SurveyLogicPageGate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.SurveyLogicPageGate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.SurveyLogicPageGate}
 */
proto.web.survey.v1.SurveyLogicPageGate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSurveyPageId(value);
      break;
    case 3:
      var value = /** @type {!proto.web.survey.v1.SurveyLogicPageGateComparisonType} */ (reader.readEnum());
      msg.setComparison(value);
      break;
    case 4:
      var value = /** @type {!proto.web.survey.v1.SurveyLogicPageGateFromType} */ (reader.readEnum());
      msg.setFrom1Selector(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrom1LogicPageSourceId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrom1LogicPageGateId(value);
      break;
    case 7:
      var value = /** @type {!proto.web.survey.v1.SurveyLogicPageGateFromType} */ (reader.readEnum());
      msg.setFrom2Selector(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrom2LogicPageSourceId(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrom2LogicPageGateId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.SurveyLogicPageGate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.SurveyLogicPageGate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.SurveyLogicPageGate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.SurveyLogicPageGate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getSurveyPageId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getComparison();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getFrom1Selector();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getFrom1LogicPageSourceId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getFrom1LogicPageGateId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getFrom2Selector();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getFrom2LogicPageSourceId();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getFrom2LogicPageGateId();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.web.survey.v1.SurveyLogicPageGate.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyLogicPageGate} returns this
 */
proto.web.survey.v1.SurveyLogicPageGate.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 10;
 * @return {string}
 */
proto.web.survey.v1.SurveyLogicPageGate.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.SurveyLogicPageGate} returns this
 */
proto.web.survey.v1.SurveyLogicPageGate.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 survey_page_id = 2;
 * @return {number}
 */
proto.web.survey.v1.SurveyLogicPageGate.prototype.getSurveyPageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyLogicPageGate} returns this
 */
proto.web.survey.v1.SurveyLogicPageGate.prototype.setSurveyPageId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional SurveyLogicPageGateComparisonType comparison = 3;
 * @return {!proto.web.survey.v1.SurveyLogicPageGateComparisonType}
 */
proto.web.survey.v1.SurveyLogicPageGate.prototype.getComparison = function() {
  return /** @type {!proto.web.survey.v1.SurveyLogicPageGateComparisonType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.web.survey.v1.SurveyLogicPageGateComparisonType} value
 * @return {!proto.web.survey.v1.SurveyLogicPageGate} returns this
 */
proto.web.survey.v1.SurveyLogicPageGate.prototype.setComparison = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional SurveyLogicPageGateFromType from_1_selector = 4;
 * @return {!proto.web.survey.v1.SurveyLogicPageGateFromType}
 */
proto.web.survey.v1.SurveyLogicPageGate.prototype.getFrom1Selector = function() {
  return /** @type {!proto.web.survey.v1.SurveyLogicPageGateFromType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.web.survey.v1.SurveyLogicPageGateFromType} value
 * @return {!proto.web.survey.v1.SurveyLogicPageGate} returns this
 */
proto.web.survey.v1.SurveyLogicPageGate.prototype.setFrom1Selector = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional int32 from_1_logic_page_source_id = 5;
 * @return {number}
 */
proto.web.survey.v1.SurveyLogicPageGate.prototype.getFrom1LogicPageSourceId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyLogicPageGate} returns this
 */
proto.web.survey.v1.SurveyLogicPageGate.prototype.setFrom1LogicPageSourceId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 from_1_logic_page_gate_id = 6;
 * @return {number}
 */
proto.web.survey.v1.SurveyLogicPageGate.prototype.getFrom1LogicPageGateId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyLogicPageGate} returns this
 */
proto.web.survey.v1.SurveyLogicPageGate.prototype.setFrom1LogicPageGateId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional SurveyLogicPageGateFromType from_2_selector = 7;
 * @return {!proto.web.survey.v1.SurveyLogicPageGateFromType}
 */
proto.web.survey.v1.SurveyLogicPageGate.prototype.getFrom2Selector = function() {
  return /** @type {!proto.web.survey.v1.SurveyLogicPageGateFromType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.web.survey.v1.SurveyLogicPageGateFromType} value
 * @return {!proto.web.survey.v1.SurveyLogicPageGate} returns this
 */
proto.web.survey.v1.SurveyLogicPageGate.prototype.setFrom2Selector = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional int32 from_2_logic_page_source_id = 8;
 * @return {number}
 */
proto.web.survey.v1.SurveyLogicPageGate.prototype.getFrom2LogicPageSourceId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyLogicPageGate} returns this
 */
proto.web.survey.v1.SurveyLogicPageGate.prototype.setFrom2LogicPageSourceId = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 from_2_logic_page_gate_id = 9;
 * @return {number}
 */
proto.web.survey.v1.SurveyLogicPageGate.prototype.getFrom2LogicPageGateId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyLogicPageGate} returns this
 */
proto.web.survey.v1.SurveyLogicPageGate.prototype.setFrom2LogicPageGateId = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.SurveyLogicPageAction.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.SurveyLogicPageAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.SurveyLogicPageAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.SurveyLogicPageAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 10, ""),
    surveyPageId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    priority: jspb.Message.getFieldWithDefault(msg, 3, 0),
    fromSelector: jspb.Message.getFieldWithDefault(msg, 4, 0),
    fromLogicPageSourceId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    fromLogicPageGateId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    toSelector: jspb.Message.getFieldWithDefault(msg, 7, 0),
    toDisqualified: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    toSurveyPageId: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.SurveyLogicPageAction}
 */
proto.web.survey.v1.SurveyLogicPageAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.SurveyLogicPageAction;
  return proto.web.survey.v1.SurveyLogicPageAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.SurveyLogicPageAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.SurveyLogicPageAction}
 */
proto.web.survey.v1.SurveyLogicPageAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSurveyPageId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriority(value);
      break;
    case 4:
      var value = /** @type {!proto.web.survey.v1.SurveyLogicPageActionFromType} */ (reader.readEnum());
      msg.setFromSelector(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFromLogicPageSourceId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFromLogicPageGateId(value);
      break;
    case 7:
      var value = /** @type {!proto.web.survey.v1.SurveyLogicPageActionToType} */ (reader.readEnum());
      msg.setToSelector(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setToDisqualified(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setToSurveyPageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.SurveyLogicPageAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.SurveyLogicPageAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.SurveyLogicPageAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.SurveyLogicPageAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getSurveyPageId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFromSelector();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getFromLogicPageSourceId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getFromLogicPageGateId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getToSelector();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getToDisqualified();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getToSurveyPageId();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.web.survey.v1.SurveyLogicPageAction.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyLogicPageAction} returns this
 */
proto.web.survey.v1.SurveyLogicPageAction.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 10;
 * @return {string}
 */
proto.web.survey.v1.SurveyLogicPageAction.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.SurveyLogicPageAction} returns this
 */
proto.web.survey.v1.SurveyLogicPageAction.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 survey_page_id = 2;
 * @return {number}
 */
proto.web.survey.v1.SurveyLogicPageAction.prototype.getSurveyPageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyLogicPageAction} returns this
 */
proto.web.survey.v1.SurveyLogicPageAction.prototype.setSurveyPageId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 priority = 3;
 * @return {number}
 */
proto.web.survey.v1.SurveyLogicPageAction.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyLogicPageAction} returns this
 */
proto.web.survey.v1.SurveyLogicPageAction.prototype.setPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional SurveyLogicPageActionFromType from_selector = 4;
 * @return {!proto.web.survey.v1.SurveyLogicPageActionFromType}
 */
proto.web.survey.v1.SurveyLogicPageAction.prototype.getFromSelector = function() {
  return /** @type {!proto.web.survey.v1.SurveyLogicPageActionFromType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.web.survey.v1.SurveyLogicPageActionFromType} value
 * @return {!proto.web.survey.v1.SurveyLogicPageAction} returns this
 */
proto.web.survey.v1.SurveyLogicPageAction.prototype.setFromSelector = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional int32 from_logic_page_source_id = 5;
 * @return {number}
 */
proto.web.survey.v1.SurveyLogicPageAction.prototype.getFromLogicPageSourceId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyLogicPageAction} returns this
 */
proto.web.survey.v1.SurveyLogicPageAction.prototype.setFromLogicPageSourceId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 from_logic_page_gate_id = 6;
 * @return {number}
 */
proto.web.survey.v1.SurveyLogicPageAction.prototype.getFromLogicPageGateId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyLogicPageAction} returns this
 */
proto.web.survey.v1.SurveyLogicPageAction.prototype.setFromLogicPageGateId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional SurveyLogicPageActionToType to_selector = 7;
 * @return {!proto.web.survey.v1.SurveyLogicPageActionToType}
 */
proto.web.survey.v1.SurveyLogicPageAction.prototype.getToSelector = function() {
  return /** @type {!proto.web.survey.v1.SurveyLogicPageActionToType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.web.survey.v1.SurveyLogicPageActionToType} value
 * @return {!proto.web.survey.v1.SurveyLogicPageAction} returns this
 */
proto.web.survey.v1.SurveyLogicPageAction.prototype.setToSelector = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional bool to_disqualified = 8;
 * @return {boolean}
 */
proto.web.survey.v1.SurveyLogicPageAction.prototype.getToDisqualified = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.web.survey.v1.SurveyLogicPageAction} returns this
 */
proto.web.survey.v1.SurveyLogicPageAction.prototype.setToDisqualified = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional int32 to_survey_page_id = 9;
 * @return {number}
 */
proto.web.survey.v1.SurveyLogicPageAction.prototype.getToSurveyPageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyLogicPageAction} returns this
 */
proto.web.survey.v1.SurveyLogicPageAction.prototype.setToSurveyPageId = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.Webhook.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.Webhook.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.Webhook} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.Webhook.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    datetimeCreated: (f = msg.getDatetimeCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    datetimeUpdated: (f = msg.getDatetimeUpdated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    surveyPageId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    link: jspb.Message.getFieldWithDefault(msg, 5, ""),
    method: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.Webhook}
 */
proto.web.survey.v1.Webhook.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.Webhook;
  return proto.web.survey.v1.Webhook.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.Webhook} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.Webhook}
 */
proto.web.survey.v1.Webhook.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDatetimeCreated(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDatetimeUpdated(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSurveyPageId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLink(value);
      break;
    case 6:
      var value = /** @type {!proto.web.survey.v1.MethodType} */ (reader.readEnum());
      msg.setMethod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.Webhook.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.Webhook.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.Webhook} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.Webhook.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDatetimeCreated();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDatetimeUpdated();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSurveyPageId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getLink();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.web.survey.v1.Webhook.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.Webhook} returns this
 */
proto.web.survey.v1.Webhook.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp datetime_created = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.web.survey.v1.Webhook.prototype.getDatetimeCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.web.survey.v1.Webhook} returns this
*/
proto.web.survey.v1.Webhook.prototype.setDatetimeCreated = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.web.survey.v1.Webhook} returns this
 */
proto.web.survey.v1.Webhook.prototype.clearDatetimeCreated = function() {
  return this.setDatetimeCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.web.survey.v1.Webhook.prototype.hasDatetimeCreated = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp datetime_updated = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.web.survey.v1.Webhook.prototype.getDatetimeUpdated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.web.survey.v1.Webhook} returns this
*/
proto.web.survey.v1.Webhook.prototype.setDatetimeUpdated = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.web.survey.v1.Webhook} returns this
 */
proto.web.survey.v1.Webhook.prototype.clearDatetimeUpdated = function() {
  return this.setDatetimeUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.web.survey.v1.Webhook.prototype.hasDatetimeUpdated = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 survey_page_id = 4;
 * @return {number}
 */
proto.web.survey.v1.Webhook.prototype.getSurveyPageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.Webhook} returns this
 */
proto.web.survey.v1.Webhook.prototype.setSurveyPageId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string link = 5;
 * @return {string}
 */
proto.web.survey.v1.Webhook.prototype.getLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.Webhook} returns this
 */
proto.web.survey.v1.Webhook.prototype.setLink = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional MethodType method = 6;
 * @return {!proto.web.survey.v1.MethodType}
 */
proto.web.survey.v1.Webhook.prototype.getMethod = function() {
  return /** @type {!proto.web.survey.v1.MethodType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.web.survey.v1.MethodType} value
 * @return {!proto.web.survey.v1.Webhook} returns this
 */
proto.web.survey.v1.Webhook.prototype.setMethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.SurveyPageRedirect.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.SurveyPageRedirect.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.SurveyPageRedirect} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.SurveyPageRedirect.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    surveyPageId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    link: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.SurveyPageRedirect}
 */
proto.web.survey.v1.SurveyPageRedirect.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.SurveyPageRedirect;
  return proto.web.survey.v1.SurveyPageRedirect.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.SurveyPageRedirect} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.SurveyPageRedirect}
 */
proto.web.survey.v1.SurveyPageRedirect.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSurveyPageId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLink(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.SurveyPageRedirect.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.SurveyPageRedirect.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.SurveyPageRedirect} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.SurveyPageRedirect.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSurveyPageId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getLink();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.web.survey.v1.SurveyPageRedirect.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyPageRedirect} returns this
 */
proto.web.survey.v1.SurveyPageRedirect.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 survey_page_id = 2;
 * @return {number}
 */
proto.web.survey.v1.SurveyPageRedirect.prototype.getSurveyPageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.SurveyPageRedirect} returns this
 */
proto.web.survey.v1.SurveyPageRedirect.prototype.setSurveyPageId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string link = 3;
 * @return {string}
 */
proto.web.survey.v1.SurveyPageRedirect.prototype.getLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.SurveyPageRedirect} returns this
 */
proto.web.survey.v1.SurveyPageRedirect.prototype.setLink = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.web.survey.v1.SurveyType = {
  SURVEY_TYPE_ALL_UNSPECIFIED: 0,
  SURVEY_TYPE_FORM: 1,
  SURVEY_TYPE_QUIZ: 2
};

/**
 * @enum {number}
 */
proto.web.survey.v1.SurveyQuestionType = {
  QUESTION_MODE_TEXT_UNSPECIFIED: 0,
  QUESTION_MODE_TEXTFIELD: 1,
  QUESTION_MODE_RADIO: 2,
  QUESTION_MODE_CHECKBOX: 3,
  QUESTION_MODE_DATE: 4,
  QUESTION_MODE_WEBHOOK: 5,
  QUESTION_MODE_RATING: 6,
  QUESTION_MODE_TIME: 7,
  QUESTION_MODE_DATETIME: 8,
  QUESTION_MODE_UPLOAD: 9,
  QUESTION_MODE_PARAGRAPH: 10,
  QUESTION_MODE_REDIRECT: 11
};

/**
 * @enum {number}
 */
proto.web.survey.v1.SurveyLogicPageSourceComparisonType = {
  LOGIC_PAGE_SOURCE_COMPARISON_ALL_UNSPECIFIED: 0,
  LOGIC_PAGE_SOURCE_COMPARISON_EQUAL: 1,
  LOGIC_PAGE_SOURCE_COMPARISON_CONTAIN: 2
};

/**
 * @enum {number}
 */
proto.web.survey.v1.SurveyLogicPageGateComparisonType = {
  LOGIC_PAGE_GATE_COMPARISON_ALL_UNSPECIFIED: 0,
  LOGIC_PAGE_GATE_COMPARISON_AND: 1,
  LOGIC_PAGE_GATE_COMPARISON_OR: 2,
  LOGIC_PAGE_GATE_COMPARISON_XOR: 3,
  LOGIC_PAGE_GATE_COMPARISON_NAND: 4,
  LOGIC_PAGE_GATE_COMPARISON_NOR: 5,
  LOGIC_PAGE_GATE_COMPARISON_XNOR: 6
};

/**
 * @enum {number}
 */
proto.web.survey.v1.SurveyLogicPageGateFromType = {
  LOGIC_PAGE_GATE_FROM_ALL_UNSPECIFIED: 0,
  LOGIC_PAGE_GATE_FROM_SOURCE: 1,
  LOGIC_PAGE_GATE_FROM_GATE: 2
};

/**
 * @enum {number}
 */
proto.web.survey.v1.SurveyLogicPageActionFromType = {
  LOGIC_PAGE_ACTION_FROM_ALL_UNSPECIFIED: 0,
  LOGIC_PAGE_ACTION_FROM_SOURCE: 1,
  LOGIC_PAGE_ACTION_FROM_GATE: 2
};

/**
 * @enum {number}
 */
proto.web.survey.v1.SurveyLogicPageActionToType = {
  LOGIC_PAGE_ACTION_TO_ALL_UNSPECIFIED: 0,
  LOGIC_PAGE_ACTION_TO_DISQUALIFIED: 1,
  LOGIC_PAGE_ACTION_TO_SURVEY_PAGE_ID: 2
};

/**
 * @enum {number}
 */
proto.web.survey.v1.MethodType = {
  ALL_UNSPECIFIED: 0,
  GET: 1,
  POST: 2,
  PUT: 3
};

goog.object.extend(exports, proto.web.survey.v1);
