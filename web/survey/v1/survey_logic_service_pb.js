// source: web/survey/v1/survey_logic_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var web_survey_v1_types_pb = require('../../../web/survey/v1/types_pb.js');
goog.object.extend(proto, web_survey_v1_types_pb);
goog.exportSymbol('proto.web.survey.v1.LogicPageActionCreateRequest', null, global);
goog.exportSymbol('proto.web.survey.v1.LogicPageActionCreateResponse', null, global);
goog.exportSymbol('proto.web.survey.v1.LogicPageActionDeleteRequest', null, global);
goog.exportSymbol('proto.web.survey.v1.LogicPageActionDeleteResponse', null, global);
goog.exportSymbol('proto.web.survey.v1.LogicPageActionGetListRequest', null, global);
goog.exportSymbol('proto.web.survey.v1.LogicPageActionGetListResponse', null, global);
goog.exportSymbol('proto.web.survey.v1.LogicPageActionUpdateRequest', null, global);
goog.exportSymbol('proto.web.survey.v1.LogicPageActionUpdateResponse', null, global);
goog.exportSymbol('proto.web.survey.v1.LogicPageGateCreateRequest', null, global);
goog.exportSymbol('proto.web.survey.v1.LogicPageGateCreateResponse', null, global);
goog.exportSymbol('proto.web.survey.v1.LogicPageGateDeleteRequest', null, global);
goog.exportSymbol('proto.web.survey.v1.LogicPageGateDeleteResponse', null, global);
goog.exportSymbol('proto.web.survey.v1.LogicPageGateGetListRequest', null, global);
goog.exportSymbol('proto.web.survey.v1.LogicPageGateGetListResponse', null, global);
goog.exportSymbol('proto.web.survey.v1.LogicPageGateUpdateRequest', null, global);
goog.exportSymbol('proto.web.survey.v1.LogicPageGateUpdateResponse', null, global);
goog.exportSymbol('proto.web.survey.v1.LogicPageSourceCreateRequest', null, global);
goog.exportSymbol('proto.web.survey.v1.LogicPageSourceCreateResponse', null, global);
goog.exportSymbol('proto.web.survey.v1.LogicPageSourceDeleteRequest', null, global);
goog.exportSymbol('proto.web.survey.v1.LogicPageSourceDeleteResponse', null, global);
goog.exportSymbol('proto.web.survey.v1.LogicPageSourceGetListRequest', null, global);
goog.exportSymbol('proto.web.survey.v1.LogicPageSourceGetListResponse', null, global);
goog.exportSymbol('proto.web.survey.v1.LogicPageSourceUpdateRequest', null, global);
goog.exportSymbol('proto.web.survey.v1.LogicPageSourceUpdateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageSourceGetListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.LogicPageSourceGetListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageSourceGetListRequest.displayName = 'proto.web.survey.v1.LogicPageSourceGetListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageSourceGetListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.web.survey.v1.LogicPageSourceGetListResponse.repeatedFields_, null);
};
goog.inherits(proto.web.survey.v1.LogicPageSourceGetListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageSourceGetListResponse.displayName = 'proto.web.survey.v1.LogicPageSourceGetListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageSourceCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.LogicPageSourceCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageSourceCreateRequest.displayName = 'proto.web.survey.v1.LogicPageSourceCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageSourceCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.LogicPageSourceCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageSourceCreateResponse.displayName = 'proto.web.survey.v1.LogicPageSourceCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageSourceUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.LogicPageSourceUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageSourceUpdateRequest.displayName = 'proto.web.survey.v1.LogicPageSourceUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageSourceUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.LogicPageSourceUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageSourceUpdateResponse.displayName = 'proto.web.survey.v1.LogicPageSourceUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageSourceDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.LogicPageSourceDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageSourceDeleteRequest.displayName = 'proto.web.survey.v1.LogicPageSourceDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageSourceDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.LogicPageSourceDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageSourceDeleteResponse.displayName = 'proto.web.survey.v1.LogicPageSourceDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageGateGetListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.LogicPageGateGetListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageGateGetListRequest.displayName = 'proto.web.survey.v1.LogicPageGateGetListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageGateGetListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.web.survey.v1.LogicPageGateGetListResponse.repeatedFields_, null);
};
goog.inherits(proto.web.survey.v1.LogicPageGateGetListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageGateGetListResponse.displayName = 'proto.web.survey.v1.LogicPageGateGetListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageGateCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.LogicPageGateCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageGateCreateRequest.displayName = 'proto.web.survey.v1.LogicPageGateCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageGateCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.LogicPageGateCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageGateCreateResponse.displayName = 'proto.web.survey.v1.LogicPageGateCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageGateUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.LogicPageGateUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageGateUpdateRequest.displayName = 'proto.web.survey.v1.LogicPageGateUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageGateUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.LogicPageGateUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageGateUpdateResponse.displayName = 'proto.web.survey.v1.LogicPageGateUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageGateDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.LogicPageGateDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageGateDeleteRequest.displayName = 'proto.web.survey.v1.LogicPageGateDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageGateDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.LogicPageGateDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageGateDeleteResponse.displayName = 'proto.web.survey.v1.LogicPageGateDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageActionGetListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.LogicPageActionGetListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageActionGetListRequest.displayName = 'proto.web.survey.v1.LogicPageActionGetListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageActionGetListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.web.survey.v1.LogicPageActionGetListResponse.repeatedFields_, null);
};
goog.inherits(proto.web.survey.v1.LogicPageActionGetListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageActionGetListResponse.displayName = 'proto.web.survey.v1.LogicPageActionGetListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageActionCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.LogicPageActionCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageActionCreateRequest.displayName = 'proto.web.survey.v1.LogicPageActionCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageActionCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.LogicPageActionCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageActionCreateResponse.displayName = 'proto.web.survey.v1.LogicPageActionCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageActionUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.LogicPageActionUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageActionUpdateRequest.displayName = 'proto.web.survey.v1.LogicPageActionUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageActionUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.LogicPageActionUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageActionUpdateResponse.displayName = 'proto.web.survey.v1.LogicPageActionUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageActionDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.LogicPageActionDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageActionDeleteRequest.displayName = 'proto.web.survey.v1.LogicPageActionDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.LogicPageActionDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.LogicPageActionDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.LogicPageActionDeleteResponse.displayName = 'proto.web.survey.v1.LogicPageActionDeleteResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageSourceGetListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageSourceGetListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageSourceGetListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageSourceGetListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageSourceGetListRequest}
 */
proto.web.survey.v1.LogicPageSourceGetListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageSourceGetListRequest;
  return proto.web.survey.v1.LogicPageSourceGetListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageSourceGetListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageSourceGetListRequest}
 */
proto.web.survey.v1.LogicPageSourceGetListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageSourceGetListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageSourceGetListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageSourceGetListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageSourceGetListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 page_id = 1;
 * @return {number}
 */
proto.web.survey.v1.LogicPageSourceGetListRequest.prototype.getPageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageSourceGetListRequest} returns this
 */
proto.web.survey.v1.LogicPageSourceGetListRequest.prototype.setPageId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.web.survey.v1.LogicPageSourceGetListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageSourceGetListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageSourceGetListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageSourceGetListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageSourceGetListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    logicPageSourcesList: jspb.Message.toObjectList(msg.getLogicPageSourcesList(),
    web_survey_v1_types_pb.SurveyLogicPageSource.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageSourceGetListResponse}
 */
proto.web.survey.v1.LogicPageSourceGetListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageSourceGetListResponse;
  return proto.web.survey.v1.LogicPageSourceGetListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageSourceGetListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageSourceGetListResponse}
 */
proto.web.survey.v1.LogicPageSourceGetListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new web_survey_v1_types_pb.SurveyLogicPageSource;
      reader.readMessage(value,web_survey_v1_types_pb.SurveyLogicPageSource.deserializeBinaryFromReader);
      msg.addLogicPageSources(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageSourceGetListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageSourceGetListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageSourceGetListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageSourceGetListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogicPageSourcesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      web_survey_v1_types_pb.SurveyLogicPageSource.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SurveyLogicPageSource logic_page_sources = 1;
 * @return {!Array<!proto.web.survey.v1.SurveyLogicPageSource>}
 */
proto.web.survey.v1.LogicPageSourceGetListResponse.prototype.getLogicPageSourcesList = function() {
  return /** @type{!Array<!proto.web.survey.v1.SurveyLogicPageSource>} */ (
    jspb.Message.getRepeatedWrapperField(this, web_survey_v1_types_pb.SurveyLogicPageSource, 1));
};


/**
 * @param {!Array<!proto.web.survey.v1.SurveyLogicPageSource>} value
 * @return {!proto.web.survey.v1.LogicPageSourceGetListResponse} returns this
*/
proto.web.survey.v1.LogicPageSourceGetListResponse.prototype.setLogicPageSourcesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.web.survey.v1.SurveyLogicPageSource=} opt_value
 * @param {number=} opt_index
 * @return {!proto.web.survey.v1.SurveyLogicPageSource}
 */
proto.web.survey.v1.LogicPageSourceGetListResponse.prototype.addLogicPageSources = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.web.survey.v1.SurveyLogicPageSource, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.web.survey.v1.LogicPageSourceGetListResponse} returns this
 */
proto.web.survey.v1.LogicPageSourceGetListResponse.prototype.clearLogicPageSourcesList = function() {
  return this.setLogicPageSourcesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageSourceCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageSourceCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageSourceCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageSourceCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    comparison: jspb.Message.getFieldWithDefault(msg, 2, 0),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    fromQuestionId: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageSourceCreateRequest}
 */
proto.web.survey.v1.LogicPageSourceCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageSourceCreateRequest;
  return proto.web.survey.v1.LogicPageSourceCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageSourceCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageSourceCreateRequest}
 */
proto.web.survey.v1.LogicPageSourceCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.web.survey.v1.SurveyLogicPageSourceComparisonType} */ (reader.readEnum());
      msg.setComparison(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFromQuestionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageSourceCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageSourceCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageSourceCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageSourceCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getComparison();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFromQuestionId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 page_id = 1;
 * @return {number}
 */
proto.web.survey.v1.LogicPageSourceCreateRequest.prototype.getPageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageSourceCreateRequest} returns this
 */
proto.web.survey.v1.LogicPageSourceCreateRequest.prototype.setPageId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.web.survey.v1.LogicPageSourceCreateRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.LogicPageSourceCreateRequest} returns this
 */
proto.web.survey.v1.LogicPageSourceCreateRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional SurveyLogicPageSourceComparisonType comparison = 2;
 * @return {!proto.web.survey.v1.SurveyLogicPageSourceComparisonType}
 */
proto.web.survey.v1.LogicPageSourceCreateRequest.prototype.getComparison = function() {
  return /** @type {!proto.web.survey.v1.SurveyLogicPageSourceComparisonType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.web.survey.v1.SurveyLogicPageSourceComparisonType} value
 * @return {!proto.web.survey.v1.LogicPageSourceCreateRequest} returns this
 */
proto.web.survey.v1.LogicPageSourceCreateRequest.prototype.setComparison = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.web.survey.v1.LogicPageSourceCreateRequest.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.LogicPageSourceCreateRequest} returns this
 */
proto.web.survey.v1.LogicPageSourceCreateRequest.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 from_question_id = 4;
 * @return {number}
 */
proto.web.survey.v1.LogicPageSourceCreateRequest.prototype.getFromQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageSourceCreateRequest} returns this
 */
proto.web.survey.v1.LogicPageSourceCreateRequest.prototype.setFromQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageSourceCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageSourceCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageSourceCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageSourceCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    logicPageSource: (f = msg.getLogicPageSource()) && web_survey_v1_types_pb.SurveyLogicPageSource.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageSourceCreateResponse}
 */
proto.web.survey.v1.LogicPageSourceCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageSourceCreateResponse;
  return proto.web.survey.v1.LogicPageSourceCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageSourceCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageSourceCreateResponse}
 */
proto.web.survey.v1.LogicPageSourceCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new web_survey_v1_types_pb.SurveyLogicPageSource;
      reader.readMessage(value,web_survey_v1_types_pb.SurveyLogicPageSource.deserializeBinaryFromReader);
      msg.setLogicPageSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageSourceCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageSourceCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageSourceCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageSourceCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogicPageSource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      web_survey_v1_types_pb.SurveyLogicPageSource.serializeBinaryToWriter
    );
  }
};


/**
 * optional SurveyLogicPageSource logic_page_source = 1;
 * @return {?proto.web.survey.v1.SurveyLogicPageSource}
 */
proto.web.survey.v1.LogicPageSourceCreateResponse.prototype.getLogicPageSource = function() {
  return /** @type{?proto.web.survey.v1.SurveyLogicPageSource} */ (
    jspb.Message.getWrapperField(this, web_survey_v1_types_pb.SurveyLogicPageSource, 1));
};


/**
 * @param {?proto.web.survey.v1.SurveyLogicPageSource|undefined} value
 * @return {!proto.web.survey.v1.LogicPageSourceCreateResponse} returns this
*/
proto.web.survey.v1.LogicPageSourceCreateResponse.prototype.setLogicPageSource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.web.survey.v1.LogicPageSourceCreateResponse} returns this
 */
proto.web.survey.v1.LogicPageSourceCreateResponse.prototype.clearLogicPageSource = function() {
  return this.setLogicPageSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.web.survey.v1.LogicPageSourceCreateResponse.prototype.hasLogicPageSource = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageSourceUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageSourceUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageSourceUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageSourceUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    logicPageSourceId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    comparison: jspb.Message.getFieldWithDefault(msg, 2, 0),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    fromQuestionId: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageSourceUpdateRequest}
 */
proto.web.survey.v1.LogicPageSourceUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageSourceUpdateRequest;
  return proto.web.survey.v1.LogicPageSourceUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageSourceUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageSourceUpdateRequest}
 */
proto.web.survey.v1.LogicPageSourceUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLogicPageSourceId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.web.survey.v1.SurveyLogicPageSourceComparisonType} */ (reader.readEnum());
      msg.setComparison(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFromQuestionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageSourceUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageSourceUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageSourceUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageSourceUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogicPageSourceId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getComparison();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFromQuestionId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 logic_page_source_id = 1;
 * @return {number}
 */
proto.web.survey.v1.LogicPageSourceUpdateRequest.prototype.getLogicPageSourceId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageSourceUpdateRequest} returns this
 */
proto.web.survey.v1.LogicPageSourceUpdateRequest.prototype.setLogicPageSourceId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.web.survey.v1.LogicPageSourceUpdateRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.LogicPageSourceUpdateRequest} returns this
 */
proto.web.survey.v1.LogicPageSourceUpdateRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional SurveyLogicPageSourceComparisonType comparison = 2;
 * @return {!proto.web.survey.v1.SurveyLogicPageSourceComparisonType}
 */
proto.web.survey.v1.LogicPageSourceUpdateRequest.prototype.getComparison = function() {
  return /** @type {!proto.web.survey.v1.SurveyLogicPageSourceComparisonType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.web.survey.v1.SurveyLogicPageSourceComparisonType} value
 * @return {!proto.web.survey.v1.LogicPageSourceUpdateRequest} returns this
 */
proto.web.survey.v1.LogicPageSourceUpdateRequest.prototype.setComparison = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.web.survey.v1.LogicPageSourceUpdateRequest.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.LogicPageSourceUpdateRequest} returns this
 */
proto.web.survey.v1.LogicPageSourceUpdateRequest.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 from_question_id = 4;
 * @return {number}
 */
proto.web.survey.v1.LogicPageSourceUpdateRequest.prototype.getFromQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageSourceUpdateRequest} returns this
 */
proto.web.survey.v1.LogicPageSourceUpdateRequest.prototype.setFromQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageSourceUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageSourceUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageSourceUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageSourceUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    logicPageSource: (f = msg.getLogicPageSource()) && web_survey_v1_types_pb.SurveyLogicPageSource.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageSourceUpdateResponse}
 */
proto.web.survey.v1.LogicPageSourceUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageSourceUpdateResponse;
  return proto.web.survey.v1.LogicPageSourceUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageSourceUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageSourceUpdateResponse}
 */
proto.web.survey.v1.LogicPageSourceUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new web_survey_v1_types_pb.SurveyLogicPageSource;
      reader.readMessage(value,web_survey_v1_types_pb.SurveyLogicPageSource.deserializeBinaryFromReader);
      msg.setLogicPageSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageSourceUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageSourceUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageSourceUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageSourceUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogicPageSource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      web_survey_v1_types_pb.SurveyLogicPageSource.serializeBinaryToWriter
    );
  }
};


/**
 * optional SurveyLogicPageSource logic_page_source = 1;
 * @return {?proto.web.survey.v1.SurveyLogicPageSource}
 */
proto.web.survey.v1.LogicPageSourceUpdateResponse.prototype.getLogicPageSource = function() {
  return /** @type{?proto.web.survey.v1.SurveyLogicPageSource} */ (
    jspb.Message.getWrapperField(this, web_survey_v1_types_pb.SurveyLogicPageSource, 1));
};


/**
 * @param {?proto.web.survey.v1.SurveyLogicPageSource|undefined} value
 * @return {!proto.web.survey.v1.LogicPageSourceUpdateResponse} returns this
*/
proto.web.survey.v1.LogicPageSourceUpdateResponse.prototype.setLogicPageSource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.web.survey.v1.LogicPageSourceUpdateResponse} returns this
 */
proto.web.survey.v1.LogicPageSourceUpdateResponse.prototype.clearLogicPageSource = function() {
  return this.setLogicPageSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.web.survey.v1.LogicPageSourceUpdateResponse.prototype.hasLogicPageSource = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageSourceDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageSourceDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageSourceDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageSourceDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    logicPageSourceId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageSourceDeleteRequest}
 */
proto.web.survey.v1.LogicPageSourceDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageSourceDeleteRequest;
  return proto.web.survey.v1.LogicPageSourceDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageSourceDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageSourceDeleteRequest}
 */
proto.web.survey.v1.LogicPageSourceDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLogicPageSourceId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageSourceDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageSourceDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageSourceDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageSourceDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogicPageSourceId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 logic_page_source_id = 1;
 * @return {number}
 */
proto.web.survey.v1.LogicPageSourceDeleteRequest.prototype.getLogicPageSourceId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageSourceDeleteRequest} returns this
 */
proto.web.survey.v1.LogicPageSourceDeleteRequest.prototype.setLogicPageSourceId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageSourceDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageSourceDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageSourceDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageSourceDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageSourceDeleteResponse}
 */
proto.web.survey.v1.LogicPageSourceDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageSourceDeleteResponse;
  return proto.web.survey.v1.LogicPageSourceDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageSourceDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageSourceDeleteResponse}
 */
proto.web.survey.v1.LogicPageSourceDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageSourceDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageSourceDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageSourceDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageSourceDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageGateGetListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageGateGetListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageGateGetListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageGateGetListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageGateGetListRequest}
 */
proto.web.survey.v1.LogicPageGateGetListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageGateGetListRequest;
  return proto.web.survey.v1.LogicPageGateGetListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageGateGetListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageGateGetListRequest}
 */
proto.web.survey.v1.LogicPageGateGetListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageGateGetListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageGateGetListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageGateGetListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageGateGetListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 page_id = 1;
 * @return {number}
 */
proto.web.survey.v1.LogicPageGateGetListRequest.prototype.getPageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageGateGetListRequest} returns this
 */
proto.web.survey.v1.LogicPageGateGetListRequest.prototype.setPageId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.web.survey.v1.LogicPageGateGetListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageGateGetListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageGateGetListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageGateGetListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageGateGetListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    logicPageGatesList: jspb.Message.toObjectList(msg.getLogicPageGatesList(),
    web_survey_v1_types_pb.SurveyLogicPageGate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageGateGetListResponse}
 */
proto.web.survey.v1.LogicPageGateGetListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageGateGetListResponse;
  return proto.web.survey.v1.LogicPageGateGetListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageGateGetListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageGateGetListResponse}
 */
proto.web.survey.v1.LogicPageGateGetListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new web_survey_v1_types_pb.SurveyLogicPageGate;
      reader.readMessage(value,web_survey_v1_types_pb.SurveyLogicPageGate.deserializeBinaryFromReader);
      msg.addLogicPageGates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageGateGetListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageGateGetListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageGateGetListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageGateGetListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogicPageGatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      web_survey_v1_types_pb.SurveyLogicPageGate.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SurveyLogicPageGate logic_page_gates = 1;
 * @return {!Array<!proto.web.survey.v1.SurveyLogicPageGate>}
 */
proto.web.survey.v1.LogicPageGateGetListResponse.prototype.getLogicPageGatesList = function() {
  return /** @type{!Array<!proto.web.survey.v1.SurveyLogicPageGate>} */ (
    jspb.Message.getRepeatedWrapperField(this, web_survey_v1_types_pb.SurveyLogicPageGate, 1));
};


/**
 * @param {!Array<!proto.web.survey.v1.SurveyLogicPageGate>} value
 * @return {!proto.web.survey.v1.LogicPageGateGetListResponse} returns this
*/
proto.web.survey.v1.LogicPageGateGetListResponse.prototype.setLogicPageGatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.web.survey.v1.SurveyLogicPageGate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.web.survey.v1.SurveyLogicPageGate}
 */
proto.web.survey.v1.LogicPageGateGetListResponse.prototype.addLogicPageGates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.web.survey.v1.SurveyLogicPageGate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.web.survey.v1.LogicPageGateGetListResponse} returns this
 */
proto.web.survey.v1.LogicPageGateGetListResponse.prototype.clearLogicPageGatesList = function() {
  return this.setLogicPageGatesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageGateCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageGateCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageGateCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageGateCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 9, ""),
    comparison: jspb.Message.getFieldWithDefault(msg, 2, 0),
    from1Selector: jspb.Message.getFieldWithDefault(msg, 3, 0),
    from1LogicPageSourceId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    from1LogicPageGateId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    from2Selector: jspb.Message.getFieldWithDefault(msg, 6, 0),
    from2LogicPageSourceId: jspb.Message.getFieldWithDefault(msg, 7, 0),
    from2LogicPageGateId: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageGateCreateRequest}
 */
proto.web.survey.v1.LogicPageGateCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageGateCreateRequest;
  return proto.web.survey.v1.LogicPageGateCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageGateCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageGateCreateRequest}
 */
proto.web.survey.v1.LogicPageGateCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.web.survey.v1.SurveyLogicPageGateComparisonType} */ (reader.readEnum());
      msg.setComparison(value);
      break;
    case 3:
      var value = /** @type {!proto.web.survey.v1.SurveyLogicPageGateFromType} */ (reader.readEnum());
      msg.setFrom1Selector(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrom1LogicPageSourceId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrom1LogicPageGateId(value);
      break;
    case 6:
      var value = /** @type {!proto.web.survey.v1.SurveyLogicPageGateFromType} */ (reader.readEnum());
      msg.setFrom2Selector(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrom2LogicPageSourceId(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrom2LogicPageGateId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageGateCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageGateCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageGateCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageGateCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getComparison();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getFrom1Selector();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getFrom1LogicPageSourceId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getFrom1LogicPageGateId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getFrom2Selector();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getFrom2LogicPageSourceId();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getFrom2LogicPageGateId();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
};


/**
 * optional int32 page_id = 1;
 * @return {number}
 */
proto.web.survey.v1.LogicPageGateCreateRequest.prototype.getPageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageGateCreateRequest} returns this
 */
proto.web.survey.v1.LogicPageGateCreateRequest.prototype.setPageId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 9;
 * @return {string}
 */
proto.web.survey.v1.LogicPageGateCreateRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.LogicPageGateCreateRequest} returns this
 */
proto.web.survey.v1.LogicPageGateCreateRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional SurveyLogicPageGateComparisonType comparison = 2;
 * @return {!proto.web.survey.v1.SurveyLogicPageGateComparisonType}
 */
proto.web.survey.v1.LogicPageGateCreateRequest.prototype.getComparison = function() {
  return /** @type {!proto.web.survey.v1.SurveyLogicPageGateComparisonType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.web.survey.v1.SurveyLogicPageGateComparisonType} value
 * @return {!proto.web.survey.v1.LogicPageGateCreateRequest} returns this
 */
proto.web.survey.v1.LogicPageGateCreateRequest.prototype.setComparison = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional SurveyLogicPageGateFromType from_1_selector = 3;
 * @return {!proto.web.survey.v1.SurveyLogicPageGateFromType}
 */
proto.web.survey.v1.LogicPageGateCreateRequest.prototype.getFrom1Selector = function() {
  return /** @type {!proto.web.survey.v1.SurveyLogicPageGateFromType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.web.survey.v1.SurveyLogicPageGateFromType} value
 * @return {!proto.web.survey.v1.LogicPageGateCreateRequest} returns this
 */
proto.web.survey.v1.LogicPageGateCreateRequest.prototype.setFrom1Selector = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int32 from_1_logic_page_source_id = 4;
 * @return {number}
 */
proto.web.survey.v1.LogicPageGateCreateRequest.prototype.getFrom1LogicPageSourceId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageGateCreateRequest} returns this
 */
proto.web.survey.v1.LogicPageGateCreateRequest.prototype.setFrom1LogicPageSourceId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 from_1_logic_page_gate_id = 5;
 * @return {number}
 */
proto.web.survey.v1.LogicPageGateCreateRequest.prototype.getFrom1LogicPageGateId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageGateCreateRequest} returns this
 */
proto.web.survey.v1.LogicPageGateCreateRequest.prototype.setFrom1LogicPageGateId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional SurveyLogicPageGateFromType from_2_selector = 6;
 * @return {!proto.web.survey.v1.SurveyLogicPageGateFromType}
 */
proto.web.survey.v1.LogicPageGateCreateRequest.prototype.getFrom2Selector = function() {
  return /** @type {!proto.web.survey.v1.SurveyLogicPageGateFromType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.web.survey.v1.SurveyLogicPageGateFromType} value
 * @return {!proto.web.survey.v1.LogicPageGateCreateRequest} returns this
 */
proto.web.survey.v1.LogicPageGateCreateRequest.prototype.setFrom2Selector = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional int32 from_2_logic_page_source_id = 7;
 * @return {number}
 */
proto.web.survey.v1.LogicPageGateCreateRequest.prototype.getFrom2LogicPageSourceId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageGateCreateRequest} returns this
 */
proto.web.survey.v1.LogicPageGateCreateRequest.prototype.setFrom2LogicPageSourceId = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 from_2_logic_page_gate_id = 8;
 * @return {number}
 */
proto.web.survey.v1.LogicPageGateCreateRequest.prototype.getFrom2LogicPageGateId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageGateCreateRequest} returns this
 */
proto.web.survey.v1.LogicPageGateCreateRequest.prototype.setFrom2LogicPageGateId = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageGateCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageGateCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageGateCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageGateCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    logicPageGate: (f = msg.getLogicPageGate()) && web_survey_v1_types_pb.SurveyLogicPageGate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageGateCreateResponse}
 */
proto.web.survey.v1.LogicPageGateCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageGateCreateResponse;
  return proto.web.survey.v1.LogicPageGateCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageGateCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageGateCreateResponse}
 */
proto.web.survey.v1.LogicPageGateCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new web_survey_v1_types_pb.SurveyLogicPageGate;
      reader.readMessage(value,web_survey_v1_types_pb.SurveyLogicPageGate.deserializeBinaryFromReader);
      msg.setLogicPageGate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageGateCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageGateCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageGateCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageGateCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogicPageGate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      web_survey_v1_types_pb.SurveyLogicPageGate.serializeBinaryToWriter
    );
  }
};


/**
 * optional SurveyLogicPageGate logic_page_gate = 1;
 * @return {?proto.web.survey.v1.SurveyLogicPageGate}
 */
proto.web.survey.v1.LogicPageGateCreateResponse.prototype.getLogicPageGate = function() {
  return /** @type{?proto.web.survey.v1.SurveyLogicPageGate} */ (
    jspb.Message.getWrapperField(this, web_survey_v1_types_pb.SurveyLogicPageGate, 1));
};


/**
 * @param {?proto.web.survey.v1.SurveyLogicPageGate|undefined} value
 * @return {!proto.web.survey.v1.LogicPageGateCreateResponse} returns this
*/
proto.web.survey.v1.LogicPageGateCreateResponse.prototype.setLogicPageGate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.web.survey.v1.LogicPageGateCreateResponse} returns this
 */
proto.web.survey.v1.LogicPageGateCreateResponse.prototype.clearLogicPageGate = function() {
  return this.setLogicPageGate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.web.survey.v1.LogicPageGateCreateResponse.prototype.hasLogicPageGate = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageGateUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageGateUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    logicPageGateId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 9, ""),
    comparison: jspb.Message.getFieldWithDefault(msg, 2, 0),
    from1Selector: jspb.Message.getFieldWithDefault(msg, 3, 0),
    from1LogicPageSourceId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    from1LogicPageGateId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    from2Selector: jspb.Message.getFieldWithDefault(msg, 6, 0),
    from2LogicPageSourceId: jspb.Message.getFieldWithDefault(msg, 7, 0),
    from2LogicPageGateId: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageGateUpdateRequest}
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageGateUpdateRequest;
  return proto.web.survey.v1.LogicPageGateUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageGateUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageGateUpdateRequest}
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLogicPageGateId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.web.survey.v1.SurveyLogicPageGateComparisonType} */ (reader.readEnum());
      msg.setComparison(value);
      break;
    case 3:
      var value = /** @type {!proto.web.survey.v1.SurveyLogicPageGateFromType} */ (reader.readEnum());
      msg.setFrom1Selector(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrom1LogicPageSourceId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrom1LogicPageGateId(value);
      break;
    case 6:
      var value = /** @type {!proto.web.survey.v1.SurveyLogicPageGateFromType} */ (reader.readEnum());
      msg.setFrom2Selector(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrom2LogicPageSourceId(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrom2LogicPageGateId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageGateUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageGateUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogicPageGateId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getComparison();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getFrom1Selector();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getFrom1LogicPageSourceId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getFrom1LogicPageGateId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getFrom2Selector();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getFrom2LogicPageSourceId();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getFrom2LogicPageGateId();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
};


/**
 * optional int32 logic_page_gate_id = 1;
 * @return {number}
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.prototype.getLogicPageGateId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageGateUpdateRequest} returns this
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.prototype.setLogicPageGateId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 9;
 * @return {string}
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.LogicPageGateUpdateRequest} returns this
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional SurveyLogicPageGateComparisonType comparison = 2;
 * @return {!proto.web.survey.v1.SurveyLogicPageGateComparisonType}
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.prototype.getComparison = function() {
  return /** @type {!proto.web.survey.v1.SurveyLogicPageGateComparisonType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.web.survey.v1.SurveyLogicPageGateComparisonType} value
 * @return {!proto.web.survey.v1.LogicPageGateUpdateRequest} returns this
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.prototype.setComparison = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional SurveyLogicPageGateFromType from_1_selector = 3;
 * @return {!proto.web.survey.v1.SurveyLogicPageGateFromType}
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.prototype.getFrom1Selector = function() {
  return /** @type {!proto.web.survey.v1.SurveyLogicPageGateFromType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.web.survey.v1.SurveyLogicPageGateFromType} value
 * @return {!proto.web.survey.v1.LogicPageGateUpdateRequest} returns this
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.prototype.setFrom1Selector = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int32 from_1_logic_page_source_id = 4;
 * @return {number}
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.prototype.getFrom1LogicPageSourceId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageGateUpdateRequest} returns this
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.prototype.setFrom1LogicPageSourceId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 from_1_logic_page_gate_id = 5;
 * @return {number}
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.prototype.getFrom1LogicPageGateId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageGateUpdateRequest} returns this
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.prototype.setFrom1LogicPageGateId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional SurveyLogicPageGateFromType from_2_selector = 6;
 * @return {!proto.web.survey.v1.SurveyLogicPageGateFromType}
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.prototype.getFrom2Selector = function() {
  return /** @type {!proto.web.survey.v1.SurveyLogicPageGateFromType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.web.survey.v1.SurveyLogicPageGateFromType} value
 * @return {!proto.web.survey.v1.LogicPageGateUpdateRequest} returns this
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.prototype.setFrom2Selector = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional int32 from_2_logic_page_source_id = 7;
 * @return {number}
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.prototype.getFrom2LogicPageSourceId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageGateUpdateRequest} returns this
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.prototype.setFrom2LogicPageSourceId = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 from_2_logic_page_gate_id = 8;
 * @return {number}
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.prototype.getFrom2LogicPageGateId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageGateUpdateRequest} returns this
 */
proto.web.survey.v1.LogicPageGateUpdateRequest.prototype.setFrom2LogicPageGateId = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageGateUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageGateUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageGateUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageGateUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    logicPageGate: (f = msg.getLogicPageGate()) && web_survey_v1_types_pb.SurveyLogicPageGate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageGateUpdateResponse}
 */
proto.web.survey.v1.LogicPageGateUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageGateUpdateResponse;
  return proto.web.survey.v1.LogicPageGateUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageGateUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageGateUpdateResponse}
 */
proto.web.survey.v1.LogicPageGateUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new web_survey_v1_types_pb.SurveyLogicPageGate;
      reader.readMessage(value,web_survey_v1_types_pb.SurveyLogicPageGate.deserializeBinaryFromReader);
      msg.setLogicPageGate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageGateUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageGateUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageGateUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageGateUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogicPageGate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      web_survey_v1_types_pb.SurveyLogicPageGate.serializeBinaryToWriter
    );
  }
};


/**
 * optional SurveyLogicPageGate logic_page_gate = 1;
 * @return {?proto.web.survey.v1.SurveyLogicPageGate}
 */
proto.web.survey.v1.LogicPageGateUpdateResponse.prototype.getLogicPageGate = function() {
  return /** @type{?proto.web.survey.v1.SurveyLogicPageGate} */ (
    jspb.Message.getWrapperField(this, web_survey_v1_types_pb.SurveyLogicPageGate, 1));
};


/**
 * @param {?proto.web.survey.v1.SurveyLogicPageGate|undefined} value
 * @return {!proto.web.survey.v1.LogicPageGateUpdateResponse} returns this
*/
proto.web.survey.v1.LogicPageGateUpdateResponse.prototype.setLogicPageGate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.web.survey.v1.LogicPageGateUpdateResponse} returns this
 */
proto.web.survey.v1.LogicPageGateUpdateResponse.prototype.clearLogicPageGate = function() {
  return this.setLogicPageGate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.web.survey.v1.LogicPageGateUpdateResponse.prototype.hasLogicPageGate = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageGateDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageGateDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageGateDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageGateDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    logicPageGateId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageGateDeleteRequest}
 */
proto.web.survey.v1.LogicPageGateDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageGateDeleteRequest;
  return proto.web.survey.v1.LogicPageGateDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageGateDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageGateDeleteRequest}
 */
proto.web.survey.v1.LogicPageGateDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLogicPageGateId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageGateDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageGateDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageGateDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageGateDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogicPageGateId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 logic_page_gate_id = 1;
 * @return {number}
 */
proto.web.survey.v1.LogicPageGateDeleteRequest.prototype.getLogicPageGateId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageGateDeleteRequest} returns this
 */
proto.web.survey.v1.LogicPageGateDeleteRequest.prototype.setLogicPageGateId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageGateDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageGateDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageGateDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageGateDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageGateDeleteResponse}
 */
proto.web.survey.v1.LogicPageGateDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageGateDeleteResponse;
  return proto.web.survey.v1.LogicPageGateDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageGateDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageGateDeleteResponse}
 */
proto.web.survey.v1.LogicPageGateDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageGateDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageGateDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageGateDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageGateDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageActionGetListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageActionGetListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageActionGetListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageActionGetListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageActionGetListRequest}
 */
proto.web.survey.v1.LogicPageActionGetListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageActionGetListRequest;
  return proto.web.survey.v1.LogicPageActionGetListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageActionGetListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageActionGetListRequest}
 */
proto.web.survey.v1.LogicPageActionGetListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageActionGetListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageActionGetListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageActionGetListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageActionGetListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 page_id = 1;
 * @return {number}
 */
proto.web.survey.v1.LogicPageActionGetListRequest.prototype.getPageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageActionGetListRequest} returns this
 */
proto.web.survey.v1.LogicPageActionGetListRequest.prototype.setPageId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.web.survey.v1.LogicPageActionGetListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageActionGetListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageActionGetListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageActionGetListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageActionGetListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    logicPageActionsList: jspb.Message.toObjectList(msg.getLogicPageActionsList(),
    web_survey_v1_types_pb.SurveyLogicPageAction.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageActionGetListResponse}
 */
proto.web.survey.v1.LogicPageActionGetListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageActionGetListResponse;
  return proto.web.survey.v1.LogicPageActionGetListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageActionGetListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageActionGetListResponse}
 */
proto.web.survey.v1.LogicPageActionGetListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new web_survey_v1_types_pb.SurveyLogicPageAction;
      reader.readMessage(value,web_survey_v1_types_pb.SurveyLogicPageAction.deserializeBinaryFromReader);
      msg.addLogicPageActions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageActionGetListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageActionGetListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageActionGetListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageActionGetListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogicPageActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      web_survey_v1_types_pb.SurveyLogicPageAction.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SurveyLogicPageAction logic_page_actions = 1;
 * @return {!Array<!proto.web.survey.v1.SurveyLogicPageAction>}
 */
proto.web.survey.v1.LogicPageActionGetListResponse.prototype.getLogicPageActionsList = function() {
  return /** @type{!Array<!proto.web.survey.v1.SurveyLogicPageAction>} */ (
    jspb.Message.getRepeatedWrapperField(this, web_survey_v1_types_pb.SurveyLogicPageAction, 1));
};


/**
 * @param {!Array<!proto.web.survey.v1.SurveyLogicPageAction>} value
 * @return {!proto.web.survey.v1.LogicPageActionGetListResponse} returns this
*/
proto.web.survey.v1.LogicPageActionGetListResponse.prototype.setLogicPageActionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.web.survey.v1.SurveyLogicPageAction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.web.survey.v1.SurveyLogicPageAction}
 */
proto.web.survey.v1.LogicPageActionGetListResponse.prototype.addLogicPageActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.web.survey.v1.SurveyLogicPageAction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.web.survey.v1.LogicPageActionGetListResponse} returns this
 */
proto.web.survey.v1.LogicPageActionGetListResponse.prototype.clearLogicPageActionsList = function() {
  return this.setLogicPageActionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageActionCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageActionCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageActionCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageActionCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 9, ""),
    priority: jspb.Message.getFieldWithDefault(msg, 2, 0),
    fromSelector: jspb.Message.getFieldWithDefault(msg, 3, 0),
    fromLogicPageSourceId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    fromLogicPageGateId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    toSelector: jspb.Message.getFieldWithDefault(msg, 6, 0),
    toDisqualified: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    toSurveyPageId: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageActionCreateRequest}
 */
proto.web.survey.v1.LogicPageActionCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageActionCreateRequest;
  return proto.web.survey.v1.LogicPageActionCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageActionCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageActionCreateRequest}
 */
proto.web.survey.v1.LogicPageActionCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriority(value);
      break;
    case 3:
      var value = /** @type {!proto.web.survey.v1.SurveyLogicPageActionFromType} */ (reader.readEnum());
      msg.setFromSelector(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFromLogicPageSourceId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFromLogicPageGateId(value);
      break;
    case 6:
      var value = /** @type {!proto.web.survey.v1.SurveyLogicPageActionToType} */ (reader.readEnum());
      msg.setToSelector(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setToDisqualified(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setToSurveyPageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageActionCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageActionCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageActionCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageActionCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getFromSelector();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getFromLogicPageSourceId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getFromLogicPageGateId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getToSelector();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getToDisqualified();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getToSurveyPageId();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
};


/**
 * optional int32 page_id = 1;
 * @return {number}
 */
proto.web.survey.v1.LogicPageActionCreateRequest.prototype.getPageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageActionCreateRequest} returns this
 */
proto.web.survey.v1.LogicPageActionCreateRequest.prototype.setPageId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 9;
 * @return {string}
 */
proto.web.survey.v1.LogicPageActionCreateRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.LogicPageActionCreateRequest} returns this
 */
proto.web.survey.v1.LogicPageActionCreateRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 priority = 2;
 * @return {number}
 */
proto.web.survey.v1.LogicPageActionCreateRequest.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageActionCreateRequest} returns this
 */
proto.web.survey.v1.LogicPageActionCreateRequest.prototype.setPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional SurveyLogicPageActionFromType from_selector = 3;
 * @return {!proto.web.survey.v1.SurveyLogicPageActionFromType}
 */
proto.web.survey.v1.LogicPageActionCreateRequest.prototype.getFromSelector = function() {
  return /** @type {!proto.web.survey.v1.SurveyLogicPageActionFromType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.web.survey.v1.SurveyLogicPageActionFromType} value
 * @return {!proto.web.survey.v1.LogicPageActionCreateRequest} returns this
 */
proto.web.survey.v1.LogicPageActionCreateRequest.prototype.setFromSelector = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int32 from_logic_page_source_id = 4;
 * @return {number}
 */
proto.web.survey.v1.LogicPageActionCreateRequest.prototype.getFromLogicPageSourceId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageActionCreateRequest} returns this
 */
proto.web.survey.v1.LogicPageActionCreateRequest.prototype.setFromLogicPageSourceId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 from_logic_page_gate_id = 5;
 * @return {number}
 */
proto.web.survey.v1.LogicPageActionCreateRequest.prototype.getFromLogicPageGateId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageActionCreateRequest} returns this
 */
proto.web.survey.v1.LogicPageActionCreateRequest.prototype.setFromLogicPageGateId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional SurveyLogicPageActionToType to_selector = 6;
 * @return {!proto.web.survey.v1.SurveyLogicPageActionToType}
 */
proto.web.survey.v1.LogicPageActionCreateRequest.prototype.getToSelector = function() {
  return /** @type {!proto.web.survey.v1.SurveyLogicPageActionToType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.web.survey.v1.SurveyLogicPageActionToType} value
 * @return {!proto.web.survey.v1.LogicPageActionCreateRequest} returns this
 */
proto.web.survey.v1.LogicPageActionCreateRequest.prototype.setToSelector = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional bool to_disqualified = 7;
 * @return {boolean}
 */
proto.web.survey.v1.LogicPageActionCreateRequest.prototype.getToDisqualified = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.web.survey.v1.LogicPageActionCreateRequest} returns this
 */
proto.web.survey.v1.LogicPageActionCreateRequest.prototype.setToDisqualified = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional int32 to_survey_page_id = 8;
 * @return {number}
 */
proto.web.survey.v1.LogicPageActionCreateRequest.prototype.getToSurveyPageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageActionCreateRequest} returns this
 */
proto.web.survey.v1.LogicPageActionCreateRequest.prototype.setToSurveyPageId = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageActionCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageActionCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageActionCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageActionCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    logicPageAction: (f = msg.getLogicPageAction()) && web_survey_v1_types_pb.SurveyLogicPageAction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageActionCreateResponse}
 */
proto.web.survey.v1.LogicPageActionCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageActionCreateResponse;
  return proto.web.survey.v1.LogicPageActionCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageActionCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageActionCreateResponse}
 */
proto.web.survey.v1.LogicPageActionCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new web_survey_v1_types_pb.SurveyLogicPageAction;
      reader.readMessage(value,web_survey_v1_types_pb.SurveyLogicPageAction.deserializeBinaryFromReader);
      msg.setLogicPageAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageActionCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageActionCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageActionCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageActionCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogicPageAction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      web_survey_v1_types_pb.SurveyLogicPageAction.serializeBinaryToWriter
    );
  }
};


/**
 * optional SurveyLogicPageAction logic_page_action = 1;
 * @return {?proto.web.survey.v1.SurveyLogicPageAction}
 */
proto.web.survey.v1.LogicPageActionCreateResponse.prototype.getLogicPageAction = function() {
  return /** @type{?proto.web.survey.v1.SurveyLogicPageAction} */ (
    jspb.Message.getWrapperField(this, web_survey_v1_types_pb.SurveyLogicPageAction, 1));
};


/**
 * @param {?proto.web.survey.v1.SurveyLogicPageAction|undefined} value
 * @return {!proto.web.survey.v1.LogicPageActionCreateResponse} returns this
*/
proto.web.survey.v1.LogicPageActionCreateResponse.prototype.setLogicPageAction = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.web.survey.v1.LogicPageActionCreateResponse} returns this
 */
proto.web.survey.v1.LogicPageActionCreateResponse.prototype.clearLogicPageAction = function() {
  return this.setLogicPageAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.web.survey.v1.LogicPageActionCreateResponse.prototype.hasLogicPageAction = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageActionUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageActionUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    logicPageActionId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 9, ""),
    priority: jspb.Message.getFieldWithDefault(msg, 2, 0),
    fromSelector: jspb.Message.getFieldWithDefault(msg, 3, 0),
    fromLogicPageSourceId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    fromLogicPageGateId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    toSelector: jspb.Message.getFieldWithDefault(msg, 6, 0),
    toDisqualified: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    toSurveyPageId: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageActionUpdateRequest}
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageActionUpdateRequest;
  return proto.web.survey.v1.LogicPageActionUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageActionUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageActionUpdateRequest}
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLogicPageActionId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriority(value);
      break;
    case 3:
      var value = /** @type {!proto.web.survey.v1.SurveyLogicPageActionFromType} */ (reader.readEnum());
      msg.setFromSelector(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFromLogicPageSourceId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFromLogicPageGateId(value);
      break;
    case 6:
      var value = /** @type {!proto.web.survey.v1.SurveyLogicPageActionToType} */ (reader.readEnum());
      msg.setToSelector(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setToDisqualified(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setToSurveyPageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageActionUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageActionUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogicPageActionId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getFromSelector();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getFromLogicPageSourceId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getFromLogicPageGateId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getToSelector();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getToDisqualified();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getToSurveyPageId();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
};


/**
 * optional int32 logic_page_action_id = 1;
 * @return {number}
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.prototype.getLogicPageActionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageActionUpdateRequest} returns this
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.prototype.setLogicPageActionId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 9;
 * @return {string}
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.LogicPageActionUpdateRequest} returns this
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 priority = 2;
 * @return {number}
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageActionUpdateRequest} returns this
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.prototype.setPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional SurveyLogicPageActionFromType from_selector = 3;
 * @return {!proto.web.survey.v1.SurveyLogicPageActionFromType}
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.prototype.getFromSelector = function() {
  return /** @type {!proto.web.survey.v1.SurveyLogicPageActionFromType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.web.survey.v1.SurveyLogicPageActionFromType} value
 * @return {!proto.web.survey.v1.LogicPageActionUpdateRequest} returns this
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.prototype.setFromSelector = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int32 from_logic_page_source_id = 4;
 * @return {number}
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.prototype.getFromLogicPageSourceId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageActionUpdateRequest} returns this
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.prototype.setFromLogicPageSourceId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 from_logic_page_gate_id = 5;
 * @return {number}
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.prototype.getFromLogicPageGateId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageActionUpdateRequest} returns this
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.prototype.setFromLogicPageGateId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional SurveyLogicPageActionToType to_selector = 6;
 * @return {!proto.web.survey.v1.SurveyLogicPageActionToType}
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.prototype.getToSelector = function() {
  return /** @type {!proto.web.survey.v1.SurveyLogicPageActionToType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.web.survey.v1.SurveyLogicPageActionToType} value
 * @return {!proto.web.survey.v1.LogicPageActionUpdateRequest} returns this
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.prototype.setToSelector = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional bool to_disqualified = 7;
 * @return {boolean}
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.prototype.getToDisqualified = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.web.survey.v1.LogicPageActionUpdateRequest} returns this
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.prototype.setToDisqualified = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional int32 to_survey_page_id = 8;
 * @return {number}
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.prototype.getToSurveyPageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageActionUpdateRequest} returns this
 */
proto.web.survey.v1.LogicPageActionUpdateRequest.prototype.setToSurveyPageId = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageActionUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageActionUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageActionUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageActionUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    logicPageAction: (f = msg.getLogicPageAction()) && web_survey_v1_types_pb.SurveyLogicPageAction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageActionUpdateResponse}
 */
proto.web.survey.v1.LogicPageActionUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageActionUpdateResponse;
  return proto.web.survey.v1.LogicPageActionUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageActionUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageActionUpdateResponse}
 */
proto.web.survey.v1.LogicPageActionUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new web_survey_v1_types_pb.SurveyLogicPageAction;
      reader.readMessage(value,web_survey_v1_types_pb.SurveyLogicPageAction.deserializeBinaryFromReader);
      msg.setLogicPageAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageActionUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageActionUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageActionUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageActionUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogicPageAction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      web_survey_v1_types_pb.SurveyLogicPageAction.serializeBinaryToWriter
    );
  }
};


/**
 * optional SurveyLogicPageAction logic_page_action = 1;
 * @return {?proto.web.survey.v1.SurveyLogicPageAction}
 */
proto.web.survey.v1.LogicPageActionUpdateResponse.prototype.getLogicPageAction = function() {
  return /** @type{?proto.web.survey.v1.SurveyLogicPageAction} */ (
    jspb.Message.getWrapperField(this, web_survey_v1_types_pb.SurveyLogicPageAction, 1));
};


/**
 * @param {?proto.web.survey.v1.SurveyLogicPageAction|undefined} value
 * @return {!proto.web.survey.v1.LogicPageActionUpdateResponse} returns this
*/
proto.web.survey.v1.LogicPageActionUpdateResponse.prototype.setLogicPageAction = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.web.survey.v1.LogicPageActionUpdateResponse} returns this
 */
proto.web.survey.v1.LogicPageActionUpdateResponse.prototype.clearLogicPageAction = function() {
  return this.setLogicPageAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.web.survey.v1.LogicPageActionUpdateResponse.prototype.hasLogicPageAction = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageActionDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageActionDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageActionDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageActionDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    logicPageActionId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageActionDeleteRequest}
 */
proto.web.survey.v1.LogicPageActionDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageActionDeleteRequest;
  return proto.web.survey.v1.LogicPageActionDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageActionDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageActionDeleteRequest}
 */
proto.web.survey.v1.LogicPageActionDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLogicPageActionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageActionDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageActionDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageActionDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageActionDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogicPageActionId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 logic_page_action_id = 1;
 * @return {number}
 */
proto.web.survey.v1.LogicPageActionDeleteRequest.prototype.getLogicPageActionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.LogicPageActionDeleteRequest} returns this
 */
proto.web.survey.v1.LogicPageActionDeleteRequest.prototype.setLogicPageActionId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.LogicPageActionDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.LogicPageActionDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.LogicPageActionDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageActionDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.LogicPageActionDeleteResponse}
 */
proto.web.survey.v1.LogicPageActionDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.LogicPageActionDeleteResponse;
  return proto.web.survey.v1.LogicPageActionDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.LogicPageActionDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.LogicPageActionDeleteResponse}
 */
proto.web.survey.v1.LogicPageActionDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.LogicPageActionDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.LogicPageActionDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.LogicPageActionDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.LogicPageActionDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.web.survey.v1);
