// source: web/survey/v1/webhooks.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var web_survey_v1_types_pb = require('../../../web/survey/v1/types_pb.js');
goog.object.extend(proto, web_survey_v1_types_pb);
goog.exportSymbol('proto.web.survey.v1.WebhookCreateRequest', null, global);
goog.exportSymbol('proto.web.survey.v1.WebhookCreateResponse', null, global);
goog.exportSymbol('proto.web.survey.v1.WebhookDeleteRequest', null, global);
goog.exportSymbol('proto.web.survey.v1.WebhookDeleteResponse', null, global);
goog.exportSymbol('proto.web.survey.v1.WebhookGetOneRequest', null, global);
goog.exportSymbol('proto.web.survey.v1.WebhookGetOneResponse', null, global);
goog.exportSymbol('proto.web.survey.v1.WebhookUpdateRequest', null, global);
goog.exportSymbol('proto.web.survey.v1.WebhookUpdateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.WebhookGetOneRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.WebhookGetOneRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.WebhookGetOneRequest.displayName = 'proto.web.survey.v1.WebhookGetOneRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.WebhookGetOneResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.WebhookGetOneResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.WebhookGetOneResponse.displayName = 'proto.web.survey.v1.WebhookGetOneResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.WebhookCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.WebhookCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.WebhookCreateRequest.displayName = 'proto.web.survey.v1.WebhookCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.WebhookCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.WebhookCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.WebhookCreateResponse.displayName = 'proto.web.survey.v1.WebhookCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.WebhookUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.WebhookUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.WebhookUpdateRequest.displayName = 'proto.web.survey.v1.WebhookUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.WebhookUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.WebhookUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.WebhookUpdateResponse.displayName = 'proto.web.survey.v1.WebhookUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.WebhookDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.WebhookDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.WebhookDeleteRequest.displayName = 'proto.web.survey.v1.WebhookDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.survey.v1.WebhookDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.survey.v1.WebhookDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.survey.v1.WebhookDeleteResponse.displayName = 'proto.web.survey.v1.WebhookDeleteResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.WebhookGetOneRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.WebhookGetOneRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.WebhookGetOneRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.WebhookGetOneRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    webhookId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    surveyPageId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.WebhookGetOneRequest}
 */
proto.web.survey.v1.WebhookGetOneRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.WebhookGetOneRequest;
  return proto.web.survey.v1.WebhookGetOneRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.WebhookGetOneRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.WebhookGetOneRequest}
 */
proto.web.survey.v1.WebhookGetOneRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWebhookId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSurveyPageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.WebhookGetOneRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.WebhookGetOneRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.WebhookGetOneRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.WebhookGetOneRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWebhookId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSurveyPageId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 webhook_id = 1;
 * @return {number}
 */
proto.web.survey.v1.WebhookGetOneRequest.prototype.getWebhookId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.WebhookGetOneRequest} returns this
 */
proto.web.survey.v1.WebhookGetOneRequest.prototype.setWebhookId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 survey_page_id = 2;
 * @return {number}
 */
proto.web.survey.v1.WebhookGetOneRequest.prototype.getSurveyPageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.WebhookGetOneRequest} returns this
 */
proto.web.survey.v1.WebhookGetOneRequest.prototype.setSurveyPageId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.WebhookGetOneResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.WebhookGetOneResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.WebhookGetOneResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.WebhookGetOneResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    webhook: (f = msg.getWebhook()) && web_survey_v1_types_pb.Webhook.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.WebhookGetOneResponse}
 */
proto.web.survey.v1.WebhookGetOneResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.WebhookGetOneResponse;
  return proto.web.survey.v1.WebhookGetOneResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.WebhookGetOneResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.WebhookGetOneResponse}
 */
proto.web.survey.v1.WebhookGetOneResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new web_survey_v1_types_pb.Webhook;
      reader.readMessage(value,web_survey_v1_types_pb.Webhook.deserializeBinaryFromReader);
      msg.setWebhook(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.WebhookGetOneResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.WebhookGetOneResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.WebhookGetOneResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.WebhookGetOneResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWebhook();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      web_survey_v1_types_pb.Webhook.serializeBinaryToWriter
    );
  }
};


/**
 * optional Webhook webhook = 1;
 * @return {?proto.web.survey.v1.Webhook}
 */
proto.web.survey.v1.WebhookGetOneResponse.prototype.getWebhook = function() {
  return /** @type{?proto.web.survey.v1.Webhook} */ (
    jspb.Message.getWrapperField(this, web_survey_v1_types_pb.Webhook, 1));
};


/**
 * @param {?proto.web.survey.v1.Webhook|undefined} value
 * @return {!proto.web.survey.v1.WebhookGetOneResponse} returns this
*/
proto.web.survey.v1.WebhookGetOneResponse.prototype.setWebhook = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.web.survey.v1.WebhookGetOneResponse} returns this
 */
proto.web.survey.v1.WebhookGetOneResponse.prototype.clearWebhook = function() {
  return this.setWebhook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.web.survey.v1.WebhookGetOneResponse.prototype.hasWebhook = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.WebhookCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.WebhookCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.WebhookCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.WebhookCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    surveyPageId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    link: jspb.Message.getFieldWithDefault(msg, 2, ""),
    method: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.WebhookCreateRequest}
 */
proto.web.survey.v1.WebhookCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.WebhookCreateRequest;
  return proto.web.survey.v1.WebhookCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.WebhookCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.WebhookCreateRequest}
 */
proto.web.survey.v1.WebhookCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSurveyPageId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLink(value);
      break;
    case 3:
      var value = /** @type {!proto.web.survey.v1.MethodType} */ (reader.readEnum());
      msg.setMethod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.WebhookCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.WebhookCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.WebhookCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.WebhookCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSurveyPageId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLink();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional int32 survey_page_id = 1;
 * @return {number}
 */
proto.web.survey.v1.WebhookCreateRequest.prototype.getSurveyPageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.WebhookCreateRequest} returns this
 */
proto.web.survey.v1.WebhookCreateRequest.prototype.setSurveyPageId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string link = 2;
 * @return {string}
 */
proto.web.survey.v1.WebhookCreateRequest.prototype.getLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.WebhookCreateRequest} returns this
 */
proto.web.survey.v1.WebhookCreateRequest.prototype.setLink = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional MethodType method = 3;
 * @return {!proto.web.survey.v1.MethodType}
 */
proto.web.survey.v1.WebhookCreateRequest.prototype.getMethod = function() {
  return /** @type {!proto.web.survey.v1.MethodType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.web.survey.v1.MethodType} value
 * @return {!proto.web.survey.v1.WebhookCreateRequest} returns this
 */
proto.web.survey.v1.WebhookCreateRequest.prototype.setMethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.WebhookCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.WebhookCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.WebhookCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.WebhookCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    webhook: (f = msg.getWebhook()) && web_survey_v1_types_pb.Webhook.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.WebhookCreateResponse}
 */
proto.web.survey.v1.WebhookCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.WebhookCreateResponse;
  return proto.web.survey.v1.WebhookCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.WebhookCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.WebhookCreateResponse}
 */
proto.web.survey.v1.WebhookCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new web_survey_v1_types_pb.Webhook;
      reader.readMessage(value,web_survey_v1_types_pb.Webhook.deserializeBinaryFromReader);
      msg.setWebhook(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.WebhookCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.WebhookCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.WebhookCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.WebhookCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWebhook();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      web_survey_v1_types_pb.Webhook.serializeBinaryToWriter
    );
  }
};


/**
 * optional Webhook webhook = 1;
 * @return {?proto.web.survey.v1.Webhook}
 */
proto.web.survey.v1.WebhookCreateResponse.prototype.getWebhook = function() {
  return /** @type{?proto.web.survey.v1.Webhook} */ (
    jspb.Message.getWrapperField(this, web_survey_v1_types_pb.Webhook, 1));
};


/**
 * @param {?proto.web.survey.v1.Webhook|undefined} value
 * @return {!proto.web.survey.v1.WebhookCreateResponse} returns this
*/
proto.web.survey.v1.WebhookCreateResponse.prototype.setWebhook = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.web.survey.v1.WebhookCreateResponse} returns this
 */
proto.web.survey.v1.WebhookCreateResponse.prototype.clearWebhook = function() {
  return this.setWebhook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.web.survey.v1.WebhookCreateResponse.prototype.hasWebhook = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.WebhookUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.WebhookUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.WebhookUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.WebhookUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    webhookId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    newLink: jspb.Message.getFieldWithDefault(msg, 2, ""),
    newMethod: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.WebhookUpdateRequest}
 */
proto.web.survey.v1.WebhookUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.WebhookUpdateRequest;
  return proto.web.survey.v1.WebhookUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.WebhookUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.WebhookUpdateRequest}
 */
proto.web.survey.v1.WebhookUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWebhookId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewLink(value);
      break;
    case 3:
      var value = /** @type {!proto.web.survey.v1.MethodType} */ (reader.readEnum());
      msg.setNewMethod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.WebhookUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.WebhookUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.WebhookUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.WebhookUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWebhookId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getNewLink();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNewMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional int32 webhook_id = 1;
 * @return {number}
 */
proto.web.survey.v1.WebhookUpdateRequest.prototype.getWebhookId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.WebhookUpdateRequest} returns this
 */
proto.web.survey.v1.WebhookUpdateRequest.prototype.setWebhookId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string new_link = 2;
 * @return {string}
 */
proto.web.survey.v1.WebhookUpdateRequest.prototype.getNewLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.survey.v1.WebhookUpdateRequest} returns this
 */
proto.web.survey.v1.WebhookUpdateRequest.prototype.setNewLink = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional MethodType new_method = 3;
 * @return {!proto.web.survey.v1.MethodType}
 */
proto.web.survey.v1.WebhookUpdateRequest.prototype.getNewMethod = function() {
  return /** @type {!proto.web.survey.v1.MethodType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.web.survey.v1.MethodType} value
 * @return {!proto.web.survey.v1.WebhookUpdateRequest} returns this
 */
proto.web.survey.v1.WebhookUpdateRequest.prototype.setNewMethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.WebhookUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.WebhookUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.WebhookUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.WebhookUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    webhook: (f = msg.getWebhook()) && web_survey_v1_types_pb.Webhook.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.WebhookUpdateResponse}
 */
proto.web.survey.v1.WebhookUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.WebhookUpdateResponse;
  return proto.web.survey.v1.WebhookUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.WebhookUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.WebhookUpdateResponse}
 */
proto.web.survey.v1.WebhookUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new web_survey_v1_types_pb.Webhook;
      reader.readMessage(value,web_survey_v1_types_pb.Webhook.deserializeBinaryFromReader);
      msg.setWebhook(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.WebhookUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.WebhookUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.WebhookUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.WebhookUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWebhook();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      web_survey_v1_types_pb.Webhook.serializeBinaryToWriter
    );
  }
};


/**
 * optional Webhook webhook = 1;
 * @return {?proto.web.survey.v1.Webhook}
 */
proto.web.survey.v1.WebhookUpdateResponse.prototype.getWebhook = function() {
  return /** @type{?proto.web.survey.v1.Webhook} */ (
    jspb.Message.getWrapperField(this, web_survey_v1_types_pb.Webhook, 1));
};


/**
 * @param {?proto.web.survey.v1.Webhook|undefined} value
 * @return {!proto.web.survey.v1.WebhookUpdateResponse} returns this
*/
proto.web.survey.v1.WebhookUpdateResponse.prototype.setWebhook = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.web.survey.v1.WebhookUpdateResponse} returns this
 */
proto.web.survey.v1.WebhookUpdateResponse.prototype.clearWebhook = function() {
  return this.setWebhook(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.web.survey.v1.WebhookUpdateResponse.prototype.hasWebhook = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.WebhookDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.WebhookDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.WebhookDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.WebhookDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    webhookId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.WebhookDeleteRequest}
 */
proto.web.survey.v1.WebhookDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.WebhookDeleteRequest;
  return proto.web.survey.v1.WebhookDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.WebhookDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.WebhookDeleteRequest}
 */
proto.web.survey.v1.WebhookDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWebhookId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.WebhookDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.WebhookDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.WebhookDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.WebhookDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWebhookId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 webhook_id = 1;
 * @return {number}
 */
proto.web.survey.v1.WebhookDeleteRequest.prototype.getWebhookId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.survey.v1.WebhookDeleteRequest} returns this
 */
proto.web.survey.v1.WebhookDeleteRequest.prototype.setWebhookId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.survey.v1.WebhookDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.web.survey.v1.WebhookDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.survey.v1.WebhookDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.WebhookDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.survey.v1.WebhookDeleteResponse}
 */
proto.web.survey.v1.WebhookDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.survey.v1.WebhookDeleteResponse;
  return proto.web.survey.v1.WebhookDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.survey.v1.WebhookDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.survey.v1.WebhookDeleteResponse}
 */
proto.web.survey.v1.WebhookDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.survey.v1.WebhookDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.survey.v1.WebhookDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.survey.v1.WebhookDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.survey.v1.WebhookDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.web.survey.v1);
